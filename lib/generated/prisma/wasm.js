
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AccountsScalarFieldEnum = {
  accountID: 'accountID',
  email: 'email',
  password: 'password',
  isVerified: 'isVerified',
  verifyToken: 'verifyToken',
  verifyTokenExpire: 'verifyTokenExpire',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status',
  defaultProfileId: 'defaultProfileId'
};

exports.Prisma.ProfileScalarFieldEnum = {
  profileID: 'profileID',
  accountID: 'accountID',
  profileImg: 'profileImg',
  firstName: 'firstName',
  lastName: 'lastName',
  contactNum: 'contactNum',
  birthDate: 'birthDate',
  profileType: 'profileType'
};

exports.Prisma.Worker_ProfileScalarFieldEnum = {
  profileID: 'profileID',
  hourlyRate: 'hourlyRate',
  verifiedSkills: 'verifiedSkills',
  bio: 'bio',
  totalEarningGross: 'totalEarningGross',
  description: 'description',
  availabilityStatus: 'availabilityStatus'
};

exports.Prisma.Freelancer_SpecializationScalarFieldEnum = {
  workerID: 'workerID',
  specializationID: 'specializationID',
  experienceYears: 'experienceYears',
  certification: 'certification'
};

exports.Prisma.SpecializationScalarFieldEnum = {
  specializationID: 'specializationID',
  specializationName: 'specializationName'
};

exports.Prisma.AgencyScalarFieldEnum = {
  agencyID: 'agencyID',
  accountID: 'accountID',
  businessName: 'businessName',
  businessDesc: 'businessDesc',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.availabilityStatus = exports.$Enums.availabilityStatus = {
  AVAILABLE: 'AVAILABLE',
  BUSY: 'BUSY',
  OFFLINE: 'OFFLINE'
};

exports.Prisma.ModelName = {
  Accounts: 'Accounts',
  Profile: 'Profile',
  Worker_Profile: 'Worker_Profile',
  Freelancer_Specialization: 'Freelancer_Specialization',
  Specialization: 'Specialization',
  Agency: 'Agency'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\BED STAC\\Desktop\\ADS BANYEL\\SE\\iayos\\lib\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "rhel-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\BED STAC\\Desktop\\ADS BANYEL\\SE\\iayos\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider      = \"prisma-client-js\"\n  output        = \"../lib/generated/prisma\"\n  binaryTargets = [\"native\", \"rhel-openssl-3.0.x\"]\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\nmodel Accounts {\n  accountID         Int       @id @default(autoincrement())\n  email             String    @unique\n  password          String? //hashed\n  isVerified        Boolean   @default(false)\n  verifyToken       String?   @default(\"\")\n  verifyTokenExpire DateTime?\n  createdAt         DateTime  @default(now())\n  updatedAt         DateTime  @default(now()) @updatedAt\n  status            String\n  profile           Profile[]\n  agency            Agency[]\n\n  defaultProfileId Int?\n  defaultProfile   Profile? @relation(\"defaultProfile\", fields: [defaultProfileId], references: [profileID])\n}\n\nmodel Profile {\n  profileID   Int      @id @default(autoincrement())\n  accountID   Int\n  profileImg  String?\n  firstName   String\n  lastName    String?\n  contactNum  String   @unique\n  birthDate   DateTime\n  profileType String?\n\n  worker         Worker_Profile?\n  accounts       Accounts        @relation(fields: [accountID], references: [accountID])\n  defaultProfile Accounts[]      @relation(\"defaultProfile\")\n\n  @@unique([accountID, profileType])\n}\n\nenum availabilityStatus {\n  AVAILABLE\n  BUSY\n  OFFLINE\n}\n\nmodel Worker_Profile {\n  profileID          Int                @id\n  hourlyRate         Decimal            @db.Decimal(10, 2)\n  verifiedSkills     Json\n  bio                String\n  totalEarningGross  Decimal            @db.Decimal(10, 2)\n  description        String\n  availabilityStatus availabilityStatus @default(OFFLINE)\n\n  profile                   Profile?                    @relation(fields: [profileID], references: [profileID])\n  freelancer_specialization Freelancer_Specialization[]\n}\n\nmodel Freelancer_Specialization {\n  workerID         Int\n  specializationID Int\n  experienceYears  Int\n  certification    String\n\n  worker_profile Worker_Profile @relation(fields: [workerID], references: [profileID])\n  specialization Specialization @relation(fields: [specializationID], references: [specializationID])\n\n  @@id([workerID, specializationID])\n}\n\nmodel Specialization {\n  specializationID   Int    @id @unique @default(autoincrement())\n  specializationName String\n\n  freelancer_specialization Freelancer_Specialization[]\n}\n\nmodel Agency {\n  agencyID     Int      @id @unique @default(autoincrement())\n  accountID    Int\n  businessName String\n  businessDesc String\n  createdAt    DateTime @default(now())\n\n  agency_accounts Accounts @relation(fields: [accountID], references: [accountID])\n}\n",
  "inlineSchemaHash": "a37c87caef3c2f88c621f6e779be8271b4f73421569d50317260c2ca4bac9ee0",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Accounts\":{\"fields\":[{\"name\":\"accountID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"verifyToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verifyTokenExpire\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"AccountsToProfile\"},{\"name\":\"agency\",\"kind\":\"object\",\"type\":\"Agency\",\"relationName\":\"AccountsToAgency\"},{\"name\":\"defaultProfileId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"defaultProfile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"defaultProfile\"}],\"dbName\":null},\"Profile\":{\"fields\":[{\"name\":\"profileID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"accountID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profileImg\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactNum\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"profileType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"worker\",\"kind\":\"object\",\"type\":\"Worker_Profile\",\"relationName\":\"ProfileToWorker_Profile\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Accounts\",\"relationName\":\"AccountsToProfile\"},{\"name\":\"defaultProfile\",\"kind\":\"object\",\"type\":\"Accounts\",\"relationName\":\"defaultProfile\"}],\"dbName\":null},\"Worker_Profile\":{\"fields\":[{\"name\":\"profileID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hourlyRate\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"verifiedSkills\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalEarningGross\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"availabilityStatus\",\"kind\":\"enum\",\"type\":\"availabilityStatus\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToWorker_Profile\"},{\"name\":\"freelancer_specialization\",\"kind\":\"object\",\"type\":\"Freelancer_Specialization\",\"relationName\":\"Freelancer_SpecializationToWorker_Profile\"}],\"dbName\":null},\"Freelancer_Specialization\":{\"fields\":[{\"name\":\"workerID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"specializationID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"experienceYears\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"certification\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"worker_profile\",\"kind\":\"object\",\"type\":\"Worker_Profile\",\"relationName\":\"Freelancer_SpecializationToWorker_Profile\"},{\"name\":\"specialization\",\"kind\":\"object\",\"type\":\"Specialization\",\"relationName\":\"Freelancer_SpecializationToSpecialization\"}],\"dbName\":null},\"Specialization\":{\"fields\":[{\"name\":\"specializationID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"specializationName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"freelancer_specialization\",\"kind\":\"object\",\"type\":\"Freelancer_Specialization\",\"relationName\":\"Freelancer_SpecializationToSpecialization\"}],\"dbName\":null},\"Agency\":{\"fields\":[{\"name\":\"agencyID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"accountID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"businessName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessDesc\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"agency_accounts\",\"kind\":\"object\",\"type\":\"Accounts\",\"relationName\":\"AccountsToAgency\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

