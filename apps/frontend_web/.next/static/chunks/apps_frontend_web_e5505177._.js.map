{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/_SECOND%20YEAR/SE/iayos/apps/frontend_web/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,IAAA,yKAAO,EAAC,IAAA,gJAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/_SECOND%20YEAR/SE/iayos/apps/frontend_web/components/ui/form_button.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { Slot } from \"@radix-ui/react-slot\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-neutral-950 focus-visible:ring-neutral-950/50 focus-visible:ring-[3px] aria-invalid:ring-red-500/20 dark:aria-invalid:ring-red-500/40 aria-invalid:border-red-500 dark:focus-visible:border-neutral-300 dark:focus-visible:ring-neutral-300/50 dark:aria-invalid:ring-red-900/20 dark:dark:aria-invalid:ring-red-900/40 dark:aria-invalid:border-red-900\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-neutral-900 text-neutral-50 shadow-xs hover:bg-neutral-900/90 dark:bg-neutral-50 dark:text-neutral-900 dark:hover:bg-neutral-50/90\",\r\n        destructive:\r\n          \"bg-red-500 text-white shadow-xs hover:bg-red-500/90 focus-visible:ring-red-500/20 dark:focus-visible:ring-red-500/40 dark:bg-red-500/60 dark:bg-red-900 dark:hover:bg-red-900/90 dark:focus-visible:ring-red-900/20 dark:dark:focus-visible:ring-red-900/40 dark:dark:bg-red-900/60\",\r\n        outline:\r\n          \"border bg-white shadow-xs hover:bg-neutral-100 hover:text-neutral-900 dark:bg-neutral-200/30 dark:border-neutral-200 dark:hover:bg-neutral-200/50 dark:bg-neutral-950 dark:hover:bg-neutral-800 dark:hover:text-neutral-50 dark:dark:bg-neutral-800/30 dark:dark:border-neutral-800 dark:dark:hover:bg-neutral-800/50\",\r\n        secondary:\r\n          \"bg-neutral-100 text-neutral-900 shadow-xs hover:bg-neutral-100/80 dark:bg-neutral-800 dark:text-neutral-50 dark:hover:bg-neutral-800/80\",\r\n        ghost:\r\n          \"hover:bg-neutral-100 hover:text-neutral-900 dark:hover:bg-neutral-100/50 dark:hover:bg-neutral-800 dark:hover:text-neutral-50 dark:dark:hover:bg-neutral-800/50\",\r\n        link: \"text-neutral-900 underline-offset-4 hover:underline dark:text-neutral-50\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    asChild?: boolean;\r\n  }) {\r\n  const Comp = asChild ? Slot : \"button\";\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { Button, buttonVariants };\r\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,IAAA,0KAAG,EACxB,wnBACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,KASb;QATa,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF,GATa;IAUd,MAAM,OAAO,UAAU,2KAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,6IAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/_SECOND%20YEAR/SE/iayos/apps/frontend_web/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Label({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\r\n  return (\r\n    <LabelPrimitive.Root\r\n      data-slot=\"label\"\r\n      className={cn(\r\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,KAGoC;QAHpC,EACb,SAAS,EACT,GAAG,OAC8C,GAHpC;IAIb,qBACE,6LAAC,4KAAmB;QAClB,aAAU;QACV,WAAW,IAAA,6IAAE,EACX,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/_SECOND%20YEAR/SE/iayos/apps/frontend_web/components/ui/form.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport {\r\n  Controller,\r\n  FormProvider,\r\n  useFormContext,\r\n  useFormState,\r\n  type ControllerProps,\r\n  type FieldPath,\r\n  type FieldValues,\r\n} from \"react-hook-form\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Label } from \"@/components/ui/label\"\r\n\r\nconst Form = FormProvider\r\n\r\ntype FormFieldContextValue<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\r\n> = {\r\n  name: TName\r\n}\r\n\r\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\r\n  {} as FormFieldContextValue\r\n)\r\n\r\nconst FormField = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\r\n>({\r\n  ...props\r\n}: ControllerProps<TFieldValues, TName>) => {\r\n  return (\r\n    <FormFieldContext.Provider value={{ name: props.name }}>\r\n      <Controller {...props} />\r\n    </FormFieldContext.Provider>\r\n  )\r\n}\r\n\r\nconst useFormField = () => {\r\n  const fieldContext = React.useContext(FormFieldContext)\r\n  const itemContext = React.useContext(FormItemContext)\r\n  const { getFieldState } = useFormContext()\r\n  const formState = useFormState({ name: fieldContext.name })\r\n  const fieldState = getFieldState(fieldContext.name, formState)\r\n\r\n  if (!fieldContext) {\r\n    throw new Error(\"useFormField should be used within <FormField>\")\r\n  }\r\n\r\n  const { id } = itemContext\r\n\r\n  return {\r\n    id,\r\n    name: fieldContext.name,\r\n    formItemId: `${id}-form-item`,\r\n    formDescriptionId: `${id}-form-item-description`,\r\n    formMessageId: `${id}-form-item-message`,\r\n    ...fieldState,\r\n  }\r\n}\r\n\r\ntype FormItemContextValue = {\r\n  id: string\r\n}\r\n\r\nconst FormItemContext = React.createContext<FormItemContextValue>(\r\n  {} as FormItemContextValue\r\n)\r\n\r\nfunction FormItem({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  const id = React.useId()\r\n\r\n  return (\r\n    <FormItemContext.Provider value={{ id }}>\r\n      <div\r\n        data-slot=\"form-item\"\r\n        className={cn(\"grid gap-2\", className)}\r\n        {...props}\r\n      />\r\n    </FormItemContext.Provider>\r\n  )\r\n}\r\n\r\nfunction FormLabel({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\r\n  const { error, formItemId } = useFormField()\r\n\r\n  return (\r\n    <Label\r\n      data-slot=\"form-label\"\r\n      data-error={!!error}\r\n      className={cn(\"data-[error=true]:text-red-500 dark:data-[error=true]:text-red-900\", className)}\r\n      htmlFor={formItemId}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction FormControl({ ...props }: React.ComponentProps<typeof Slot>) {\r\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\r\n\r\n  return (\r\n    <Slot\r\n      data-slot=\"form-control\"\r\n      id={formItemId}\r\n      aria-describedby={\r\n        !error\r\n          ? `${formDescriptionId}`\r\n          : `${formDescriptionId} ${formMessageId}`\r\n      }\r\n      aria-invalid={!!error}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction FormDescription({ className, ...props }: React.ComponentProps<\"p\">) {\r\n  const { formDescriptionId } = useFormField()\r\n\r\n  return (\r\n    <p\r\n      data-slot=\"form-description\"\r\n      id={formDescriptionId}\r\n      className={cn(\"text-neutral-500 text-sm dark:text-neutral-400\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction FormMessage({ className, ...props }: React.ComponentProps<\"p\">) {\r\n  const { error, formMessageId } = useFormField()\r\n  const body = error ? String(error?.message ?? \"\") : props.children\r\n\r\n  if (!body) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <p\r\n      data-slot=\"form-message\"\r\n      id={formMessageId}\r\n      className={cn(\"text-red-500 text-sm dark:text-red-900\", className)}\r\n      {...props}\r\n    >\r\n      {body}\r\n    </p>\r\n  )\r\n}\r\n\r\nexport {\r\n  useFormField,\r\n  Form,\r\n  FormItem,\r\n  FormLabel,\r\n  FormControl,\r\n  FormDescription,\r\n  FormMessage,\r\n  FormField,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAEA;AAEA;AACA;AAUA;AACA;;;AAhBA;;;;;;AAkBA,MAAM,OAAO,iLAAY;AASzB,MAAM,iCAAmB,8KAAmB,CAC1C,CAAC;AAGH,MAAM,YAAY;QAGhB,EACA,GAAG,OACkC;IACrC,qBACE,6LAAC,iBAAiB,QAAQ;QAAC,OAAO;YAAE,MAAM,MAAM,IAAI;QAAC;kBACnD,cAAA,6LAAC,+KAAU;YAAE,GAAG,KAAK;;;;;;;;;;;AAG3B;KAXM;AAaN,MAAM,eAAe;;IACnB,MAAM,eAAe,2KAAgB,CAAC;IACtC,MAAM,cAAc,2KAAgB,CAAC;IACrC,MAAM,EAAE,aAAa,EAAE,GAAG,IAAA,mLAAc;IACxC,MAAM,YAAY,IAAA,iLAAY,EAAC;QAAE,MAAM,aAAa,IAAI;IAAC;IACzD,MAAM,aAAa,cAAc,aAAa,IAAI,EAAE;IAEpD,IAAI,CAAC,cAAc;QACjB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,EAAE,EAAE,GAAG;IAEf,OAAO;QACL;QACA,MAAM,aAAa,IAAI;QACvB,YAAY,AAAC,GAAK,OAAH,IAAG;QAClB,mBAAmB,AAAC,GAAK,OAAH,IAAG;QACzB,eAAe,AAAC,GAAK,OAAH,IAAG;QACrB,GAAG,UAAU;IACf;AACF;GArBM;;QAGsB,mLAAc;QACtB,iLAAY;;;AAuBhC,MAAM,gCAAkB,8KAAmB,CACzC,CAAC;AAGH,SAAS,SAAS,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;;IAChB,MAAM,KAAK,sKAAW;IAEtB,qBACE,6LAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;QAAG;kBACpC,cAAA,6LAAC;YACC,aAAU;YACV,WAAW,IAAA,6IAAE,EAAC,cAAc;YAC3B,GAAG,KAAK;;;;;;;;;;;AAIjB;IAZS;MAAA;AAcT,SAAS,UAAU,KAGgC;QAHhC,EACjB,SAAS,EACT,GAAG,OAC8C,GAHhC;;IAIjB,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG;IAE9B,qBACE,6LAAC,8JAAK;QACJ,aAAU;QACV,cAAY,CAAC,CAAC;QACd,WAAW,IAAA,6IAAE,EAAC,sEAAsE;QACpF,SAAS;QACR,GAAG,KAAK;;;;;;AAGf;IAfS;;QAIuB;;;MAJvB;AAiBT,SAAS,YAAY,KAA+C;QAA/C,EAAE,GAAG,OAA0C,GAA/C;;IACnB,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG;IAEhE,qBACE,6LAAC,2KAAI;QACH,aAAU;QACV,IAAI;QACJ,oBACE,CAAC,QACG,AAAC,GAAoB,OAAlB,qBACH,AAAC,GAAuB,OAArB,mBAAkB,KAAiB,OAAd;QAE9B,gBAAc,CAAC,CAAC;QACf,GAAG,KAAK;;;;;;AAGf;IAhBS;;QACyD;;;MADzD;AAkBT,SAAS,gBAAgB,KAAkD;QAAlD,EAAE,SAAS,EAAE,GAAG,OAAkC,GAAlD;;IACvB,MAAM,EAAE,iBAAiB,EAAE,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,IAAI;QACJ,WAAW,IAAA,6IAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGf;IAXS;;QACuB;;;MADvB;AAaT,SAAS,YAAY,KAAkD;QAAlD,EAAE,SAAS,EAAE,GAAG,OAAkC,GAAlD;;IACnB,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG;QACL;IAA5B,MAAM,OAAO,QAAQ,OAAO,CAAA,iBAAA,kBAAA,4BAAA,MAAO,OAAO,cAAd,4BAAA,iBAAkB,MAAM,MAAM,QAAQ;IAElE,IAAI,CAAC,MAAM;QACT,OAAO;IACT;IAEA,qBACE,6LAAC;QACC,aAAU;QACV,IAAI;QACJ,WAAW,IAAA,6IAAE,EAAC,0CAA0C;QACvD,GAAG,KAAK;kBAER;;;;;;AAGP;IAlBS;;QAC0B;;;MAD1B","debugId":null}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/_SECOND%20YEAR/SE/iayos/apps/frontend_web/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\r\n  return (\r\n    <input\r\n      type={type}\r\n      data-slot=\"input\"\r\n      className={cn(\r\n        // Base styling - optimized for mobile\r\n        \"flex h-11 w-full rounded-lg border border-gray-200 bg-white px-3 py-2 text-sm font-inter\",\r\n        \"placeholder:text-gray-400 text-gray-900\",\r\n        \"transition-all duration-200 ease-in-out\",\r\n        \"shadow-sm\",\r\n\r\n        // Focus styling with soft blue glow\r\n        \"focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:border-blue-500\",\r\n        \"focus:shadow-lg focus:shadow-blue-500/10\",\r\n\r\n        // Error styling\r\n        \"aria-invalid:border-red-500 aria-invalid:ring-2 aria-invalid:ring-red-500/20\",\r\n        \"aria-invalid:focus:border-red-500 aria-invalid:focus:ring-red-500/20\",\r\n\r\n        // Disabled styling\r\n        \"disabled:opacity-50 disabled:cursor-not-allowed disabled:bg-gray-50\",\r\n\r\n        // File input styling\r\n        \"file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-gray-700\",\r\n\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { Input };\r\n"],"names":[],"mappings":";;;;;AAEA;;;AAEA,SAAS,MAAM,KAA4D;QAA5D,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC,GAA5D;IACb,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,IAAA,6IAAE,EACX,sCAAsC;QACtC,4FACA,2CACA,2CACA,aAEA,oCAAoC;QACpC,gFACA,4CAEA,gBAAgB;QAChB,gFACA,wEAEA,mBAAmB;QACnB,uEAEA,qBAAqB;QACrB,sFAEA;QAED,GAAG,KAAK;;;;;;AAGf;KA/BS","debugId":null}},
    {"offset": {"line": 375, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/_SECOND%20YEAR/SE/iayos/apps/frontend_web/components/ui/email-verification-alert.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { CheckCircle, Mail, X } from \"lucide-react\";\r\n\r\ninterface EmailVerificationAlertProps {\r\n  isVisible: boolean;\r\n  onClose: () => void;\r\n  email?: string;\r\n}\r\n\r\nexport function EmailVerificationAlert({\r\n  isVisible,\r\n  onClose,\r\n  email,\r\n}: EmailVerificationAlertProps) {\r\n  if (!isVisible) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 backdrop-blur-sm bg-white bg-opacity-10 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4 relative\">\r\n        {/* Close button */}\r\n        <button\r\n          onClick={onClose}\r\n          className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-600 transition-colors\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <X size={20} />\r\n        </button>\r\n\r\n        {/* Content */}\r\n        <div className=\"p-6 text-center\">\r\n          {/* Success icon */}\r\n          <div className=\"mx-auto flex items-center justify-center w-16 h-16 bg-green-100 rounded-full mb-4\">\r\n            <CheckCircle className=\"w-8 h-8 text-green-600\" />\r\n          </div>\r\n\r\n          {/* Title */}\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n            Account Created Successfully!\r\n          </h3>\r\n\r\n          {/* Email icon and message */}\r\n          <div className=\"flex items-center justify-center mb-4\">\r\n            <Mail className=\"w-5 h-5 text-blue-600 mr-2\" />\r\n            <span className=\"text-sm text-gray-600\">Check your email</span>\r\n          </div>\r\n\r\n          {/* Main message */}\r\n          <p className=\"text-gray-600 mb-4 leading-relaxed\">\r\n            We&apos;ve sent a verification link to{\" \"}\r\n            {email ? (\r\n              <span className=\"font-medium text-gray-900\">{email}</span>\r\n            ) : (\r\n              \"your email address\"\r\n            )}\r\n            . Please click the link to verify your account and complete the\r\n            registration process.\r\n          </p>\r\n\r\n          {/* Additional info */}\r\n          <div className=\"bg-blue-50 rounded-lg p-3 mb-4\">\r\n            <p className=\"text-xs text-blue-800\">\r\n              <strong>Tip:</strong> Don&apos;t forget to check your spam/junk\r\n              folder if you don&apos;t see the email in your inbox.\r\n            </p>\r\n          </div>\r\n\r\n          {/* Action button */}\r\n          <button\r\n            onClick={onClose}\r\n            className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2.5 px-4 rounded-lg transition-colors duration-200\"\r\n          >\r\n            Got it!\r\n          </button>\r\n\r\n          {/* Resend link */}\r\n          <p className=\"text-xs text-gray-500 mt-3\">\r\n            Didn&apos;t receive the email?{\" \"}\r\n            <button className=\"text-blue-600 hover:text-blue-700 underline\">\r\n              Resend verification email\r\n            </button>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface PasswordResetAlertProps {\r\n  isVisible: boolean;\r\n  onClose: () => void;\r\n  email?: string;\r\n}\r\n\r\nexport function PasswordResetAlert({\r\n  isVisible,\r\n  onClose,\r\n  email,\r\n}: PasswordResetAlertProps) {\r\n  if (!isVisible) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 backdrop-blur-sm bg-white bg-opacity-10 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4 relative\">\r\n        {/* Close button */}\r\n        <button\r\n          onClick={onClose}\r\n          className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-600 transition-colors\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <X size={20} />\r\n        </button>\r\n\r\n        {/* Content */}\r\n        <div className=\"p-6 text-center\">\r\n          {/* Success icon */}\r\n          <div className=\"mx-auto flex items-center justify-center w-16 h-16 bg-orange-100 rounded-full mb-4\">\r\n            <div className=\"text-2xl\">🔑</div>\r\n          </div>\r\n\r\n          {/* Title */}\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-2 font-inter\">\r\n            Reset Link Sent!\r\n          </h3>\r\n\r\n          {/* Email icon and message */}\r\n          <div className=\"flex items-center justify-center mb-4\">\r\n            <Mail className=\"w-5 h-5 text-orange-600 mr-2\" />\r\n            <span className=\"text-sm text-gray-600 font-inter\">\r\n              Check your email\r\n            </span>\r\n          </div>\r\n\r\n          {/* Main message */}\r\n          <p className=\"text-gray-600 mb-4 leading-relaxed font-inter\">\r\n            We&apos;ve sent a password reset link to{\" \"}\r\n            {email ? (\r\n              <span className=\"font-medium text-gray-900\">{email}</span>\r\n            ) : (\r\n              \"your email address\"\r\n            )}\r\n            . Click the link to create a new password for your account.\r\n          </p>\r\n\r\n          {/* Security info */}\r\n          <div className=\"bg-yellow-50 rounded-lg p-3 mb-4 border border-yellow-200\">\r\n            <p className=\"text-xs text-yellow-800 font-inter\">\r\n              <strong>🔒 Security Notice:</strong> This link will expire in 15\r\n              minutes for your protection. If you didn&apos;t request this\r\n              reset, you can safely ignore this email.\r\n            </p>\r\n          </div>\r\n\r\n          {/* Additional info */}\r\n          <div className=\"bg-blue-50 rounded-lg p-3 mb-4\">\r\n            <p className=\"text-xs text-blue-800 font-inter\">\r\n              <strong>Tip:</strong> Don&apos;t forget to check your spam/junk\r\n              folder if you don&apos;t see the email in your inbox.\r\n            </p>\r\n          </div>\r\n\r\n          {/* Action button */}\r\n          <button\r\n            onClick={onClose}\r\n            className=\"w-full bg-orange-600 hover:bg-orange-700 text-white font-medium py-2.5 px-4 rounded-lg transition-colors duration-200 font-inter\"\r\n          >\r\n            Got it!\r\n          </button>\r\n\r\n          {/* Back to login link */}\r\n          <p className=\"text-xs text-gray-500 mt-3 font-inter\">\r\n            Remember your password?{\" \"}\r\n            <button\r\n              onClick={onClose}\r\n              className=\"text-blue-600 hover:text-blue-700 underline\"\r\n            >\r\n              Back to Sign In\r\n            </button>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAGA;AAAA;AAAA;AAHA;;;AAWO,SAAS,uBAAuB,KAIT;QAJS,EACrC,SAAS,EACT,OAAO,EACP,KAAK,EACuB,GAJS;IAKrC,IAAI,CAAC,WAAW,OAAO;IAEvB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBACC,SAAS;oBACT,WAAU;oBACV,cAAW;8BAEX,cAAA,6LAAC,oMAAC;wBAAC,MAAM;;;;;;;;;;;8BAIX,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,6OAAW;gCAAC,WAAU;;;;;;;;;;;sCAIzB,6LAAC;4BAAG,WAAU;sCAA2C;;;;;;sCAKzD,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,6MAAI;oCAAC,WAAU;;;;;;8CAChB,6LAAC;oCAAK,WAAU;8CAAwB;;;;;;;;;;;;sCAI1C,6LAAC;4BAAE,WAAU;;gCAAqC;gCACT;gCACtC,sBACC,6LAAC;oCAAK,WAAU;8CAA6B;;;;;2CAE7C;gCACA;;;;;;;sCAMJ,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAE,WAAU;;kDACX,6LAAC;kDAAO;;;;;;oCAAa;;;;;;;;;;;;sCAMzB,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAKD,6LAAC;4BAAE,WAAU;;gCAA6B;gCACT;8CAC/B,6LAAC;oCAAO,WAAU;8CAA8C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ5E;KA5EgB;AAoFT,SAAS,mBAAmB,KAIT;QAJS,EACjC,SAAS,EACT,OAAO,EACP,KAAK,EACmB,GAJS;IAKjC,IAAI,CAAC,WAAW,OAAO;IAEvB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBACC,SAAS;oBACT,WAAU;oBACV,cAAW;8BAEX,cAAA,6LAAC,oMAAC;wBAAC,MAAM;;;;;;;;;;;8BAIX,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;0CAAW;;;;;;;;;;;sCAI5B,6LAAC;4BAAG,WAAU;sCAAsD;;;;;;sCAKpE,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,6MAAI;oCAAC,WAAU;;;;;;8CAChB,6LAAC;oCAAK,WAAU;8CAAmC;;;;;;;;;;;;sCAMrD,6LAAC;4BAAE,WAAU;;gCAAgD;gCAClB;gCACxC,sBACC,6LAAC;oCAAK,WAAU;8CAA6B;;;;;2CAE7C;gCACA;;;;;;;sCAKJ,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAE,WAAU;;kDACX,6LAAC;kDAAO;;;;;;oCAA4B;;;;;;;;;;;;sCAOxC,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAE,WAAU;;kDACX,6LAAC;kDAAO;;;;;;oCAAa;;;;;;;;;;;;sCAMzB,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAKD,6LAAC;4BAAE,WAAU;;gCAAwC;gCAC3B;8CACxB,6LAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb;MAzFgB","debugId":null}},
    {"offset": {"line": 752, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/_SECOND%20YEAR/SE/iayos/apps/frontend_web/app/auth/register/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { z } from \"zod\";\r\nimport { Button } from \"@/components/ui/form_button\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { Suspense } from \"react\";\r\nimport Image from \"next/image\";\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from \"@/components/ui/form\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { EmailVerificationAlert } from \"@/components/ui/email-verification-alert\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\";\r\nimport { signIn } from \"next-auth/react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useAuthToast } from \"@/components/ui/toast\";\r\nimport { Eye, EyeOff } from \"lucide-react\";\r\n\r\nconst COUNTRIES = [\r\n  \"Afghanistan\",\r\n  \"Albania\",\r\n  \"Algeria\",\r\n  \"Andorra\",\r\n  \"Angola\",\r\n  \"Antigua and Barbuda\",\r\n  \"Argentina\",\r\n  \"Armenia\",\r\n  \"Australia\",\r\n  \"Austria\",\r\n  \"Azerbaijan\",\r\n  \"Bahamas\",\r\n  \"Bahrain\",\r\n  \"Bangladesh\",\r\n  \"Barbados\",\r\n  \"Belarus\",\r\n  \"Belgium\",\r\n  \"Belize\",\r\n  \"Benin\",\r\n  \"Bhutan\",\r\n  \"Bolivia\",\r\n  \"Bosnia and Herzegovina\",\r\n  \"Botswana\",\r\n  \"Brazil\",\r\n  \"Brunei\",\r\n  \"Bulgaria\",\r\n  \"Burkina Faso\",\r\n  \"Burundi\",\r\n  \"Cabo Verde\",\r\n  \"Cambodia\",\r\n  \"Cameroon\",\r\n  \"Canada\",\r\n  \"Central African Republic\",\r\n  \"Chad\",\r\n  \"Chile\",\r\n  \"China\",\r\n  \"Colombia\",\r\n  \"Comoros\",\r\n  \"Congo\",\r\n  \"Costa Rica\",\r\n  \"Croatia\",\r\n  \"Cuba\",\r\n  \"Cyprus\",\r\n  \"Czech Republic\",\r\n  \"Denmark\",\r\n  \"Djibouti\",\r\n  \"Dominica\",\r\n  \"Dominican Republic\",\r\n  \"East Timor\",\r\n  \"Ecuador\",\r\n  \"Egypt\",\r\n  \"El Salvador\",\r\n  \"Equatorial Guinea\",\r\n  \"Eritrea\",\r\n  \"Estonia\",\r\n  \"Eswatini\",\r\n  \"Ethiopia\",\r\n  \"Fiji\",\r\n  \"Finland\",\r\n  \"France\",\r\n  \"Gabon\",\r\n  \"Gambia\",\r\n  \"Georgia\",\r\n  \"Germany\",\r\n  \"Ghana\",\r\n  \"Greece\",\r\n  \"Grenada\",\r\n  \"Guatemala\",\r\n  \"Guinea\",\r\n  \"Guinea-Bissau\",\r\n  \"Guyana\",\r\n  \"Haiti\",\r\n  \"Honduras\",\r\n  \"Hungary\",\r\n  \"Iceland\",\r\n  \"India\",\r\n  \"Indonesia\",\r\n  \"Iran\",\r\n  \"Iraq\",\r\n  \"Ireland\",\r\n  \"Israel\",\r\n  \"Italy\",\r\n  \"Jamaica\",\r\n  \"Japan\",\r\n  \"Jordan\",\r\n  \"Kazakhstan\",\r\n  \"Kenya\",\r\n  \"Kiribati\",\r\n  \"Kosovo\",\r\n  \"Kuwait\",\r\n  \"Kyrgyzstan\",\r\n  \"Laos\",\r\n  \"Latvia\",\r\n  \"Lebanon\",\r\n  \"Lesotho\",\r\n  \"Liberia\",\r\n  \"Libya\",\r\n  \"Liechtenstein\",\r\n  \"Lithuania\",\r\n  \"Luxembourg\",\r\n  \"Madagascar\",\r\n  \"Malawi\",\r\n  \"Malaysia\",\r\n  \"Maldives\",\r\n  \"Mali\",\r\n  \"Malta\",\r\n  \"Marshall Islands\",\r\n  \"Mauritania\",\r\n  \"Mauritius\",\r\n  \"Mexico\",\r\n  \"Micronesia\",\r\n  \"Moldova\",\r\n  \"Monaco\",\r\n  \"Mongolia\",\r\n  \"Montenegro\",\r\n  \"Morocco\",\r\n  \"Mozambique\",\r\n  \"Myanmar\",\r\n  \"Namibia\",\r\n  \"Nauru\",\r\n  \"Nepal\",\r\n  \"Netherlands\",\r\n  \"New Zealand\",\r\n  \"Nicaragua\",\r\n  \"Niger\",\r\n  \"Nigeria\",\r\n  \"North Korea\",\r\n  \"North Macedonia\",\r\n  \"Norway\",\r\n  \"Oman\",\r\n  \"Pakistan\",\r\n  \"Palau\",\r\n  \"Palestine\",\r\n  \"Panama\",\r\n  \"Papua New Guinea\",\r\n  \"Paraguay\",\r\n  \"Peru\",\r\n  \"Philippines\",\r\n  \"Poland\",\r\n  \"Portugal\",\r\n  \"Qatar\",\r\n  \"Romania\",\r\n  \"Russia\",\r\n  \"Rwanda\",\r\n  \"Saint Kitts and Nevis\",\r\n  \"Saint Lucia\",\r\n  \"Saint Vincent and the Grenadines\",\r\n  \"Samoa\",\r\n  \"San Marino\",\r\n  \"Sao Tome and Principe\",\r\n  \"Saudi Arabia\",\r\n  \"Senegal\",\r\n  \"Serbia\",\r\n  \"Seychelles\",\r\n  \"Sierra Leone\",\r\n  \"Singapore\",\r\n  \"Slovakia\",\r\n  \"Slovenia\",\r\n  \"Solomon Islands\",\r\n  \"Somalia\",\r\n  \"South Africa\",\r\n  \"South Korea\",\r\n  \"South Sudan\",\r\n  \"Spain\",\r\n  \"Sri Lanka\",\r\n  \"Sudan\",\r\n  \"Suriname\",\r\n  \"Sweden\",\r\n  \"Switzerland\",\r\n  \"Syria\",\r\n  \"Taiwan\",\r\n  \"Tajikistan\",\r\n  \"Tanzania\",\r\n  \"Thailand\",\r\n  \"Togo\",\r\n  \"Tonga\",\r\n  \"Trinidad and Tobago\",\r\n  \"Tunisia\",\r\n  \"Turkey\",\r\n  \"Turkmenistan\",\r\n  \"Tuvalu\",\r\n  \"Uganda\",\r\n  \"Ukraine\",\r\n  \"United Arab Emirates\",\r\n  \"United Kingdom\",\r\n  \"United States\",\r\n  \"Uruguay\",\r\n  \"Uzbekistan\",\r\n  \"Vanuatu\",\r\n  \"Vatican City\",\r\n  \"Venezuela\",\r\n  \"Vietnam\",\r\n  \"Yemen\",\r\n  \"Zambia\",\r\n  \"Zimbabwe\",\r\n];\r\n\r\nconst formSchema = z\r\n  .object({\r\n    lastName: z\r\n      .string()\r\n      .regex(/^[A-Za-z]+$/, \"Name must consist of only letters\"),\r\n\r\n    firstName: z\r\n      .string()\r\n      .regex(/^[A-Za-z]+$/, \"Name must consist of only letters\"),\r\n\r\n    middleName: z\r\n      .string()\r\n      .regex(/^[A-Za-z]*$/, \"Name must consist of only letters\")\r\n      .optional()\r\n      .or(z.literal(\"\")),\r\n\r\n    contactNum: z.string().max(11, \"Invalid Mobile Number\"),\r\n\r\n    email: z.string().email(\"Invalid email address\"),\r\n\r\n    birthDate: z\r\n      .string()\r\n      .min(1, \"Date of birth is required\")\r\n      .refine((dateStr) => {\r\n        const birthDate = new Date(dateStr);\r\n        const today = new Date();\r\n        const age = today.getFullYear() - birthDate.getFullYear();\r\n        const monthDiff = today.getMonth() - birthDate.getMonth();\r\n\r\n        // Check if birthday has occurred this year\r\n        if (\r\n          monthDiff < 0 ||\r\n          (monthDiff === 0 && today.getDate() < birthDate.getDate())\r\n        ) {\r\n          return age - 1 >= 18;\r\n        }\r\n        return age >= 18;\r\n      }, \"You must be at least 18 years old to register\"),\r\n\r\n    password: z\r\n      .string()\r\n      .min(8, \"Password must be at least 8 characters\")\r\n      .regex(/[A-Z]/, \"Password must contain at least one uppercase letter\")\r\n      .regex(/[0-9]/, \"Password must contain at least one number\")\r\n      .regex(\r\n        /[^A-Za-z0-9]/,\r\n        \"Password must contain at least one special character\"\r\n      ),\r\n\r\n    confirmPassword: z.string().min(1, \"Please confirm your password\"),\r\n\r\n    // Address fields\r\n    street_address: z.string().min(1, \"Street address is required\"),\r\n    city: z.string().min(1, \"City is required\"),\r\n    province: z.string().min(1, \"Province is required\"),\r\n    country: z.string().min(1, \"Country is required\"),\r\n    postal_code: z.string().regex(/^\\d{4}$/, \"Postal code must be 4 digits\"),\r\n    // turnstileToken: z.string().min(1, \"Captcha required\"), // ✅ add this\r\n  })\r\n  .refine((data) => data.password === data.confirmPassword, {\r\n    message: \"Passwords don't match\",\r\n    path: [\"confirmPassword\"],\r\n  });\r\n\r\n// Create a separate component that uses useSearchParams\r\nfunction RegisterContent() {\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      localStorage.setItem(\"hasSeenOnboard\", \"true\");\r\n    }\r\n  }, []);\r\n\r\n  const form = useForm<z.infer<typeof formSchema>>({\r\n    resolver: zodResolver(formSchema),\r\n    defaultValues: {\r\n      lastName: \"\",\r\n      firstName: \"\",\r\n      middleName: \"\",\r\n      email: \"\",\r\n      contactNum: \"\",\r\n      birthDate: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      street_address: \"\",\r\n      city: \"\",\r\n      province: \"\",\r\n      country: \"Philippines\",\r\n      postal_code: \"\",\r\n    },\r\n  });\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [showEmailAlert, setShowEmailAlert] = useState(false);\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const router = useRouter();\r\n  const { showAuthError } = useAuthToast();\r\n\r\n  const onSubmit = async (values: z.infer<typeof formSchema>) => {\r\n    setIsLoading(true);\r\n    setError(\"\"); // Clear previous errors\r\n    try {\r\n      // Prepare payload - remove confirmPassword and ensure middleName is always a string\r\n      const { confirmPassword, ...formValues } = values;\r\n      const payload = {\r\n        ...formValues,\r\n        middleName: formValues.middleName || \"\", // Ensure middleName is always a string\r\n      };\r\n\r\n      console.log(\"📤 Sending registration payload:\", payload); // Debug log\r\n\r\n      const res = await fetch(\"http://localhost:8000/api/accounts/register\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(payload),\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(\"📥 Response status:\", res.status, \"Data:\", data); // Debug log\r\n\r\n      if (!res.ok) {\r\n        // Handle different error response formats\r\n        const errorMessage =\r\n          data.error?.[0]?.message ||\r\n          data.message ||\r\n          data.detail ||\r\n          \"Registration failed\";\r\n        setError(errorMessage);\r\n        return;\r\n      }\r\n\r\n      // Success case\r\n      setUserEmail(values.email);\r\n      setShowEmailAlert(true);\r\n\r\n      // Send verification email\r\n      const verifyRes = await fetch(\"/api/auth/send\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          email: data.email,\r\n          verifyLink: data.verifyLink,\r\n          verifyLinkExpire: data.verifyLinkExpire,\r\n        }),\r\n      });\r\n\r\n      if (!verifyRes.ok) {\r\n        console.error(\"Failed to send verification email\");\r\n        // Don't set error here as registration was successful\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Registration error:\", err);\r\n      setError(\"Network error. Please check your connection and try again.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCloseAlert = () => {\r\n    setShowEmailAlert(false);\r\n    // Navigate to onboard page after user acknowledges the email alert\r\n    router.push(\"/onboard\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <EmailVerificationAlert\r\n        isVisible={showEmailAlert}\r\n        onClose={handleCloseAlert}\r\n        email={userEmail}\r\n      />\r\n\r\n      {/* Desktop Navigation Bar */}\r\n      <div className=\"hidden lg:block fixed top-0 left-0 right-0 z-50 bg-white border-b border-gray-200\">\r\n        <div className=\"max-w-7xl mx-auto px-6 py-4 flex justify-between items-center\">\r\n          <div className=\"text-2xl font-bold text-gray-900\">iAyos</div>\r\n          <Link\r\n            href=\"/auth/register/agency\"\r\n            className=\"px-4 py-2 text-sm font-medium text-blue-600 hover:text-blue-700 hover:bg-blue-50 rounded-lg transition-colors\"\r\n          >\r\n            Looking for contracts for your agency? Register here\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"min-h-screen bg-gray-50\">\r\n        {/* Mobile Layout */}\r\n        <div className=\"lg:hidden flex justify-center items-center min-h-screen max-h-screen overflow-hidden p-4\">\r\n          <div className=\"w-full max-w-sm bg-white rounded-2xl shadow-xl p-6 max-h-[95vh] overflow-y-auto\">\r\n            <div className=\"text-center mb-6\">\r\n              <h1 className=\"font-inter text-xl font-semibold text-gray-900 mb-1\">\r\n                Create account\r\n              </h1>\r\n              <p className=\"font-inter text-sm text-gray-600\">\r\n                Get started today\r\n              </p>\r\n            </div>\r\n\r\n            <Form {...form}>\r\n              <form\r\n                onSubmit={form.handleSubmit(onSubmit)}\r\n                className=\"space-y-4\"\r\n              >\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"firstName\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                        First Name<span className=\"text-red-500 ml-1\">*</span>\r\n                      </FormLabel>\r\n                      <FormControl>\r\n                        <Input\r\n                          placeholder=\"First name\"\r\n                          className=\"h-11\"\r\n                          {...field}\r\n                        />\r\n                      </FormControl>\r\n                      <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"middleName\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                        Middle Name{\" \"}\r\n                        <span className=\"text-gray-500 text-xs\">\r\n                          (Optional)\r\n                        </span>\r\n                      </FormLabel>\r\n                      <FormControl>\r\n                        <Input\r\n                          placeholder=\"Middle name\"\r\n                          className=\"h-11\"\r\n                          {...field}\r\n                        />\r\n                      </FormControl>\r\n                      <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"lastName\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                        Last Name<span className=\"text-red-500 ml-1\">*</span>\r\n                      </FormLabel>\r\n                      <FormControl>\r\n                        <Input\r\n                          placeholder=\"Last name\"\r\n                          className=\"h-11\"\r\n                          {...field}\r\n                        />\r\n                      </FormControl>\r\n                      <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"email\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                        Email<span className=\"text-red-500 ml-1\">*</span>\r\n                      </FormLabel>\r\n                      <FormControl>\r\n                        <Input\r\n                          placeholder=\"Email address\"\r\n                          className=\"h-11\"\r\n                          {...field}\r\n                        />\r\n                      </FormControl>\r\n                      <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"contactNum\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                        Phone<span className=\"text-red-500 ml-1\">*</span>\r\n                      </FormLabel>\r\n                      <FormControl>\r\n                        <Input\r\n                          placeholder=\"Contact number\"\r\n                          className=\"h-11\"\r\n                          {...field}\r\n                        />\r\n                      </FormControl>\r\n                      <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"birthDate\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                        Date of Birth\r\n                        <span className=\"text-red-500 ml-1\">*</span>\r\n                      </FormLabel>\r\n                      <FormControl>\r\n                        <Input type=\"date\" className=\"h-11\" {...field} />\r\n                      </FormControl>\r\n                      <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"password\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                        Password<span className=\"text-red-500 ml-1\">*</span>\r\n                      </FormLabel>\r\n                      <FormControl>\r\n                        <div className=\"relative\">\r\n                          <Input\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            placeholder=\"Create password\"\r\n                            className=\"h-11 pr-10\"\r\n                            {...field}\r\n                          />\r\n                          <button\r\n                            type=\"button\"\r\n                            onMouseDown={() => setShowPassword(true)}\r\n                            onMouseUp={() => setShowPassword(false)}\r\n                            onMouseLeave={() => setShowPassword(false)}\r\n                            onTouchStart={() => setShowPassword(true)}\r\n                            onTouchEnd={() => setShowPassword(false)}\r\n                            className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-500 hover:text-gray-700\"\r\n                          >\r\n                            {showPassword ? (\r\n                              <EyeOff className=\"h-4 w-4\" />\r\n                            ) : (\r\n                              <Eye className=\"h-4 w-4\" />\r\n                            )}\r\n                          </button>\r\n                        </div>\r\n                      </FormControl>\r\n                      <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"confirmPassword\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                        Confirm Password\r\n                        <span className=\"text-red-500 ml-1\">*</span>\r\n                      </FormLabel>\r\n                      <FormControl>\r\n                        <div className=\"relative\">\r\n                          <Input\r\n                            type={showConfirmPassword ? \"text\" : \"password\"}\r\n                            placeholder=\"Confirm password\"\r\n                            className=\"h-11 pr-10\"\r\n                            {...field}\r\n                          />\r\n                          <button\r\n                            type=\"button\"\r\n                            onMouseDown={() => setShowConfirmPassword(true)}\r\n                            onMouseUp={() => setShowConfirmPassword(false)}\r\n                            onMouseLeave={() => setShowConfirmPassword(false)}\r\n                            onTouchStart={() => setShowConfirmPassword(true)}\r\n                            onTouchEnd={() => setShowConfirmPassword(false)}\r\n                            className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-500 hover:text-gray-700\"\r\n                          >\r\n                            {showConfirmPassword ? (\r\n                              <EyeOff className=\"h-4 w-4\" />\r\n                            ) : (\r\n                              <Eye className=\"h-4 w-4\" />\r\n                            )}\r\n                          </button>\r\n                        </div>\r\n                      </FormControl>\r\n                      <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                {/* Address Section */}\r\n                <div className=\"pt-2\">\r\n                  <h3 className=\"font-inter text-sm font-semibold text-gray-900 mb-3\">\r\n                    Address Information\r\n                  </h3>\r\n                </div>\r\n\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"street_address\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                        Street Address\r\n                        <span className=\"text-red-500 ml-1\">*</span>\r\n                      </FormLabel>\r\n                      <FormControl>\r\n                        <Input\r\n                          placeholder=\"House no., Street name\"\r\n                          className=\"h-11\"\r\n                          {...field}\r\n                        />\r\n                      </FormControl>\r\n                      <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"city\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                        City<span className=\"text-red-500 ml-1\">*</span>\r\n                      </FormLabel>\r\n                      <FormControl>\r\n                        <Input\r\n                          placeholder=\"e.g., Zamboanga City\"\r\n                          className=\"h-11\"\r\n                          {...field}\r\n                        />\r\n                      </FormControl>\r\n                      <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"province\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                        Province<span className=\"text-red-500 ml-1\">*</span>\r\n                      </FormLabel>\r\n                      <FormControl>\r\n                        <Input\r\n                          placeholder=\"e.g., Zamboanga del Sur\"\r\n                          className=\"h-11\"\r\n                          {...field}\r\n                        />\r\n                      </FormControl>\r\n                      <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"country\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                        Country<span className=\"text-red-500 ml-1\">*</span>\r\n                      </FormLabel>\r\n                      <FormControl>\r\n                        <div>\r\n                          <Input\r\n                            value=\"Philippines\"\r\n                            className=\"h-11 bg-gray-50 cursor-not-allowed text-gray-700\"\r\n                            readOnly\r\n                            tabIndex={-1}\r\n                          />\r\n                          <input type=\"hidden\" {...field} value=\"Philippines\" />\r\n                        </div>\r\n                      </FormControl>\r\n                      <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"postal_code\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                        Postal Code<span className=\"text-red-500 ml-1\">*</span>\r\n                      </FormLabel>\r\n                      <FormControl>\r\n                        <Input\r\n                          placeholder=\"e.g., 7000\"\r\n                          className=\"h-11\"\r\n                          maxLength={4}\r\n                          {...field}\r\n                        />\r\n                      </FormControl>\r\n                      <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                {error && (\r\n                  <div className=\"p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n                    <p className=\"text-red-600 text-sm\">{error}</p>\r\n                  </div>\r\n                )}\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"w-full h-11 font-inter font-medium mt-6\"\r\n                  disabled={isLoading}\r\n                >\r\n                  {isLoading ? (\r\n                    <span className=\"flex items-center justify-center\">\r\n                      <svg\r\n                        className=\"animate-spin -ml-1 mr-3 h-4 w-4 text-white\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                      >\r\n                        <circle\r\n                          className=\"opacity-25\"\r\n                          cx=\"12\"\r\n                          cy=\"12\"\r\n                          r=\"10\"\r\n                          stroke=\"currentColor\"\r\n                          strokeWidth=\"4\"\r\n                        ></circle>\r\n                        <path\r\n                          className=\"opacity-75\"\r\n                          fill=\"currentColor\"\r\n                          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                        ></path>\r\n                      </svg>\r\n                      Creating...\r\n                    </span>\r\n                  ) : (\r\n                    \"Create Account\"\r\n                  )}\r\n                </Button>\r\n              </form>\r\n            </Form>\r\n\r\n            {/* Divider */}\r\n            <div className=\"flex items-center w-full my-4\">\r\n              <div className=\"flex-1 border-t border-gray-200\"></div>\r\n              <span className=\"px-3 text-xs font-inter text-gray-500\">or</span>\r\n              <div className=\"flex-1 border-t border-gray-200\"></div>\r\n            </div>\r\n\r\n            {/* Google Sign In Button */}\r\n            <button\r\n              onClick={async () => {\r\n                try {\r\n                  const result = await signIn(\"google\", {\r\n                    redirect: false,\r\n                  });\r\n\r\n                  if (result?.error) {\r\n                    showAuthError(\r\n                      \"We couldn't sign you up with Google. Please try again or use email registration.\",\r\n                      \"Google Sign-Up Error\"\r\n                    );\r\n                  } else if (result?.ok) {\r\n                    router.push(\"/dashboard\");\r\n                  }\r\n                } catch (error) {\r\n                  showAuthError(\r\n                    \"Unable to connect to Google. Please check your internet connection and try again.\",\r\n                    \"Connection Error\"\r\n                  );\r\n                }\r\n              }}\r\n              disabled={isLoading}\r\n              className=\"flex items-center justify-center w-full h-11 border border-gray-200 rounded-lg px-4 py-3 bg-white hover:bg-gray-50 hover:border-gray-300 hover:shadow-md transition-all duration-200 shadow-sm font-inter font-medium text-gray-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              <Image\r\n                src=\"/google-logo.svg\"\r\n                alt=\"Google logo\"\r\n                width={18}\r\n                height={18}\r\n                className=\"mr-2\"\r\n              />\r\n              <span className=\"text-sm\">Continue with Google</span>\r\n            </button>\r\n\r\n            <div className=\"mt-4 text-center\">\r\n              <p className=\"text-xs font-inter text-gray-600\">\r\n                Already have an account?{\" \"}\r\n                <Link\r\n                  href=\"/auth/login\"\r\n                  className=\"text-blue-600 hover:text-blue-700 font-medium transition-colors\"\r\n                >\r\n                  Sign in\r\n                </Link>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Desktop Layout */}\r\n        <div className=\"hidden lg:flex min-h-screen pt-20\">\r\n          {/* Left Side - Branding/Image */}\r\n          <div className=\"lg:w-1/2 bg-gradient-to-br from-blue-600 to-purple-700 flex items-center justify-center p-8\">\r\n            <div className=\"max-w-md text-center text-white\">\r\n              <h1 className=\"text-4xl font-bold mb-4\">Join iAyos</h1>\r\n              <p className=\"text-xl mb-8 opacity-90\">\r\n                Connect with skilled professionals or find your next opportunity\r\n              </p>\r\n              <div className=\"space-y-4\">\r\n                {/* Freelancer benefits */}\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className=\"w-6 h-6 bg-white bg-opacity-20 rounded-full flex items-center justify-center\">\r\n                    <span className=\"text-sm\">✓</span>\r\n                  </div>\r\n                  <span>Find verified professionals</span>\r\n                </div>\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className=\"w-6 h-6 bg-white bg-opacity-20 rounded-full flex items-center justify-center\">\r\n                    <span className=\"text-sm\">✓</span>\r\n                  </div>\r\n                  <span>Secure payments & reviews</span>\r\n                </div>\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className=\"w-6 h-6 bg-white bg-opacity-20 rounded-full flex items-center justify-center\">\r\n                    <span className=\"text-sm\">✓</span>\r\n                  </div>\r\n                  <span>Available 24/7 support</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Right Side - Form */}\r\n          <div className=\"lg:w-1/2 flex items-center justify-center p-8\">\r\n            <div className=\"w-full max-w-md\">\r\n              {/* Freelancer Registration Form */}\r\n              <div className=\"text-center mb-8\">\r\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-2\">\r\n                  Create your account\r\n                </h2>\r\n                <p className=\"text-gray-600\">\r\n                  Join thousands of users already on iAyos\r\n                </p>\r\n              </div>\r\n\r\n              <Form {...form}>\r\n                <form\r\n                  onSubmit={form.handleSubmit(onSubmit)}\r\n                  className=\"space-y-6\"\r\n                >\r\n                  {/* Name Fields Row */}\r\n                  <div className=\"grid grid-cols-2 gap-4\">\r\n                    <FormField\r\n                      control={form.control}\r\n                      name=\"firstName\"\r\n                      render={({ field }) => (\r\n                        <FormItem>\r\n                          <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                            First Name\r\n                            <span className=\"text-red-500 ml-1\">*</span>\r\n                          </FormLabel>\r\n                          <FormControl>\r\n                            <Input\r\n                              placeholder=\"First name\"\r\n                              className=\"h-12\"\r\n                              {...field}\r\n                            />\r\n                          </FormControl>\r\n                          <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                        </FormItem>\r\n                      )}\r\n                    />\r\n                    <FormField\r\n                      control={form.control}\r\n                      name=\"middleName\"\r\n                      render={({ field }) => (\r\n                        <FormItem>\r\n                          <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                            Middle Name{\" \"}\r\n                            <span className=\"text-gray-500 text-xs\">\r\n                              (Optional)\r\n                            </span>\r\n                          </FormLabel>\r\n                          <FormControl>\r\n                            <Input\r\n                              placeholder=\"Middle name\"\r\n                              className=\"h-12\"\r\n                              {...field}\r\n                            />\r\n                          </FormControl>\r\n                          <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                        </FormItem>\r\n                      )}\r\n                    />\r\n                  </div>\r\n\r\n                  <FormField\r\n                    control={form.control}\r\n                    name=\"lastName\"\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                          Last Name\r\n                          <span className=\"text-red-500 ml-1\">*</span>\r\n                        </FormLabel>\r\n                        <FormControl>\r\n                          <Input\r\n                            placeholder=\"Last name\"\r\n                            className=\"h-12\"\r\n                            {...field}\r\n                          />\r\n                        </FormControl>\r\n                        <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n\r\n                  <FormField\r\n                    control={form.control}\r\n                    name=\"email\"\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                          Email Address\r\n                          <span className=\"text-red-500 ml-1\">*</span>\r\n                        </FormLabel>\r\n                        <FormControl>\r\n                          <Input\r\n                            placeholder=\"Enter your email\"\r\n                            className=\"h-12\"\r\n                            {...field}\r\n                          />\r\n                        </FormControl>\r\n                        <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n\r\n                  {/* Contact and Birth Date Row */}\r\n                  <div className=\"grid grid-cols-2 gap-4\">\r\n                    <FormField\r\n                      control={form.control}\r\n                      name=\"contactNum\"\r\n                      render={({ field }) => (\r\n                        <FormItem>\r\n                          <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                            Phone Number\r\n                            <span className=\"text-red-500 ml-1\">*</span>\r\n                          </FormLabel>\r\n                          <FormControl>\r\n                            <Input\r\n                              placeholder=\"Contact number\"\r\n                              className=\"h-12\"\r\n                              {...field}\r\n                            />\r\n                          </FormControl>\r\n                          <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                        </FormItem>\r\n                      )}\r\n                    />\r\n                    <FormField\r\n                      control={form.control}\r\n                      name=\"birthDate\"\r\n                      render={({ field }) => (\r\n                        <FormItem>\r\n                          <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                            Date of Birth\r\n                            <span className=\"text-red-500 ml-1\">*</span>\r\n                          </FormLabel>\r\n                          <FormControl>\r\n                            <Input type=\"date\" className=\"h-12\" {...field} />\r\n                          </FormControl>\r\n                          <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                        </FormItem>\r\n                      )}\r\n                    />\r\n                  </div>\r\n\r\n                  <FormField\r\n                    control={form.control}\r\n                    name=\"password\"\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                          Password\r\n                          <span className=\"text-red-500 ml-1\">*</span>\r\n                        </FormLabel>\r\n                        <FormControl>\r\n                          <div className=\"relative\">\r\n                            <Input\r\n                              type={showPassword ? \"text\" : \"password\"}\r\n                              placeholder=\"Create a strong password\"\r\n                              className=\"h-12 pr-10\"\r\n                              {...field}\r\n                            />\r\n                            <button\r\n                              type=\"button\"\r\n                              onMouseDown={() => setShowPassword(true)}\r\n                              onMouseUp={() => setShowPassword(false)}\r\n                              onMouseLeave={() => setShowPassword(false)}\r\n                              className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-500 hover:text-gray-700\"\r\n                            >\r\n                              {showPassword ? (\r\n                                <EyeOff className=\"h-5 w-5\" />\r\n                              ) : (\r\n                                <Eye className=\"h-5 w-5\" />\r\n                              )}\r\n                            </button>\r\n                          </div>\r\n                        </FormControl>\r\n                        <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n\r\n                  <FormField\r\n                    control={form.control}\r\n                    name=\"confirmPassword\"\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                          Confirm Password\r\n                          <span className=\"text-red-500 ml-1\">*</span>\r\n                        </FormLabel>\r\n                        <FormControl>\r\n                          <div className=\"relative\">\r\n                            <Input\r\n                              type={showConfirmPassword ? \"text\" : \"password\"}\r\n                              placeholder=\"Confirm your password\"\r\n                              className=\"h-12 pr-10\"\r\n                              {...field}\r\n                            />\r\n                            <button\r\n                              type=\"button\"\r\n                              onMouseDown={() => setShowConfirmPassword(true)}\r\n                              onMouseUp={() => setShowConfirmPassword(false)}\r\n                              onMouseLeave={() => setShowConfirmPassword(false)}\r\n                              className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-500 hover:text-gray-700\"\r\n                            >\r\n                              {showConfirmPassword ? (\r\n                                <EyeOff className=\"h-5 w-5\" />\r\n                              ) : (\r\n                                <Eye className=\"h-5 w-5\" />\r\n                              )}\r\n                            </button>\r\n                          </div>\r\n                        </FormControl>\r\n                        <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n\r\n                  {/* Address Section */}\r\n                  <div className=\"pt-4\">\r\n                    <h3 className=\"font-inter text-base font-semibold text-gray-900 mb-4\">\r\n                      Address Information\r\n                    </h3>\r\n                  </div>\r\n\r\n                  <FormField\r\n                    control={form.control}\r\n                    name=\"street_address\"\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                          Street Address\r\n                          <span className=\"text-red-500 ml-1\">*</span>\r\n                        </FormLabel>\r\n                        <FormControl>\r\n                          <Input\r\n                            placeholder=\"House no., Street name, Barangay\"\r\n                            className=\"h-12\"\r\n                            {...field}\r\n                          />\r\n                        </FormControl>\r\n                        <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n\r\n                  {/* City and Province Row */}\r\n                  <div className=\"grid grid-cols-2 gap-4\">\r\n                    <FormField\r\n                      control={form.control}\r\n                      name=\"city\"\r\n                      render={({ field }) => (\r\n                        <FormItem>\r\n                          <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                            City\r\n                            <span className=\"text-red-500 ml-1\">*</span>\r\n                          </FormLabel>\r\n                          <FormControl>\r\n                            <Input\r\n                              placeholder=\"e.g., Zamboanga City\"\r\n                              className=\"h-12\"\r\n                              {...field}\r\n                            />\r\n                          </FormControl>\r\n                          <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                        </FormItem>\r\n                      )}\r\n                    />\r\n                    <FormField\r\n                      control={form.control}\r\n                      name=\"province\"\r\n                      render={({ field }) => (\r\n                        <FormItem>\r\n                          <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                            Province\r\n                            <span className=\"text-red-500 ml-1\">*</span>\r\n                          </FormLabel>\r\n                          <FormControl>\r\n                            <Input\r\n                              placeholder=\"e.g., Zamboanga del Sur\"\r\n                              className=\"h-12\"\r\n                              {...field}\r\n                            />\r\n                          </FormControl>\r\n                          <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                        </FormItem>\r\n                      )}\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Country and Postal Code Row */}\r\n                  <div className=\"grid grid-cols-2 gap-4\">\r\n                    <FormField\r\n                      control={form.control}\r\n                      name=\"country\"\r\n                      render={({ field }) => (\r\n                        <FormItem>\r\n                          <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                            Country\r\n                            <span className=\"text-red-500 ml-1\">*</span>\r\n                          </FormLabel>\r\n                          <FormControl>\r\n                            <div>\r\n                              <Input\r\n                                value=\"Philippines\"\r\n                                className=\"h-12 bg-gray-50 cursor-not-allowed text-gray-700\"\r\n                                readOnly\r\n                                tabIndex={-1}\r\n                              />\r\n                              <input\r\n                                type=\"hidden\"\r\n                                {...field}\r\n                                value=\"Philippines\"\r\n                              />\r\n                            </div>\r\n                          </FormControl>\r\n                          <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                        </FormItem>\r\n                      )}\r\n                    />\r\n                    <FormField\r\n                      control={form.control}\r\n                      name=\"postal_code\"\r\n                      render={({ field }) => (\r\n                        <FormItem>\r\n                          <FormLabel className=\"font-inter text-sm font-medium text-gray-700\">\r\n                            Postal Code\r\n                            <span className=\"text-red-500 ml-1\">*</span>\r\n                          </FormLabel>\r\n                          <FormControl>\r\n                            <Input\r\n                              placeholder=\"e.g., 7000\"\r\n                              className=\"h-12\"\r\n                              maxLength={4}\r\n                              {...field}\r\n                            />\r\n                          </FormControl>\r\n                          <FormMessage className=\"font-inter text-xs text-red-500\" />\r\n                        </FormItem>\r\n                      )}\r\n                    />\r\n                  </div>\r\n\r\n                  {error && (\r\n                    <div className=\"p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n                      <p className=\"text-red-600 text-sm\">{error}</p>\r\n                    </div>\r\n                  )}\r\n\r\n                  <Button\r\n                    type=\"submit\"\r\n                    className=\"w-full h-12 font-inter font-medium text-base\"\r\n                    disabled={isLoading}\r\n                  >\r\n                    {isLoading ? (\r\n                      <span className=\"flex items-center justify-center\">\r\n                        <svg\r\n                          className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          fill=\"none\"\r\n                          viewBox=\"0 0 24 24\"\r\n                        >\r\n                          <circle\r\n                            className=\"opacity-25\"\r\n                            cx=\"12\"\r\n                            cy=\"12\"\r\n                            r=\"10\"\r\n                            stroke=\"currentColor\"\r\n                            strokeWidth=\"4\"\r\n                          ></circle>\r\n                          <path\r\n                            className=\"opacity-75\"\r\n                            fill=\"currentColor\"\r\n                            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                          ></path>\r\n                        </svg>\r\n                        Creating Account...\r\n                      </span>\r\n                    ) : (\r\n                      \"Create Account\"\r\n                    )}\r\n                  </Button>\r\n                </form>\r\n              </Form>\r\n\r\n              {/* Desktop Divider */}\r\n              <div className=\"flex items-center w-full my-6\">\r\n                <div className=\"flex-1 border-t border-gray-200\"></div>\r\n                <span className=\"px-4 text-sm font-inter text-gray-500\">\r\n                  or continue with\r\n                </span>\r\n                <div className=\"flex-1 border-t border-gray-200\"></div>\r\n              </div>\r\n\r\n              {/* Desktop Google Sign In */}\r\n              <button\r\n                onClick={async () => {\r\n                  try {\r\n                    const result = await signIn(\"google\", {\r\n                      redirect: false,\r\n                    });\r\n\r\n                    if (result?.error) {\r\n                      showAuthError(\r\n                        \"We couldn't sign you up with Google. Please try again or use email registration.\",\r\n                        \"Google Sign-Up Error\"\r\n                      );\r\n                    } else if (result?.ok) {\r\n                      router.push(\"/dashboard\");\r\n                    }\r\n                  } catch (error) {\r\n                    showAuthError(\r\n                      \"Unable to connect to Google. Please check your internet connection and try again.\",\r\n                      \"Connection Error\"\r\n                    );\r\n                  }\r\n                }}\r\n                disabled={isLoading}\r\n                className=\"flex items-center justify-center w-full h-12 border border-gray-300 rounded-lg px-4 py-3 bg-white hover:bg-gray-50 hover:border-gray-400 hover:shadow-md transition-all duration-200 shadow-sm font-inter font-medium text-gray-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                <Image\r\n                  src=\"/google-logo.svg\"\r\n                  alt=\"Google logo\"\r\n                  width={20}\r\n                  height={20}\r\n                  className=\"mr-3\"\r\n                />\r\n                <span>Continue with Google</span>\r\n              </button>\r\n\r\n              <div className=\"mt-6 text-center\">\r\n                <p className=\"text-sm font-inter text-gray-600\">\r\n                  Already have an account?{\" \"}\r\n                  <Link\r\n                    href=\"/auth/login\"\r\n                    className=\"text-blue-600 hover:text-blue-700 font-medium transition-colors\"\r\n                  >\r\n                    Sign in here\r\n                  </Link>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// Main component that wraps with Suspense\r\nconst Register = () => {\r\n  return (\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <RegisterContent />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}