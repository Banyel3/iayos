"use strict";exports.id=9535,exports.ids=[9535],exports.modules={4195:(a,b,c)=>{let d=c(78950),e=c(46423);class f extends d{constructor(a,b=null){super(a),this.client=a.storeClient,this.clientType=a.storeType,this.dbName=a.dbName,this.tableName=a.tableName,this.clearExpiredByTimeout=a.clearExpiredByTimeout,this.tableCreated=a.tableCreated,this.tableCreated?(this.clearExpiredByTimeout&&this._clearExpiredHourAgo(),"function"==typeof b&&b()):this._createDbAndTable().then(()=>{this.tableCreated=!0,this.clearExpiredByTimeout&&this._clearExpiredHourAgo(),"function"==typeof b&&b()}).catch(a=>{if("function"==typeof b)b(a);else throw a})}clearExpired(a){return new Promise(b=>{this._getConnection().then(c=>{c.query("DELETE FROM ??.?? WHERE expire < ?",[this.dbName,this.tableName,a],()=>{this._releaseConnection(c),b()})}).catch(()=>{b()})})}_clearExpiredHourAgo(){this._clearExpiredTimeoutId&&clearTimeout(this._clearExpiredTimeoutId),this._clearExpiredTimeoutId=setTimeout(()=>{this.clearExpired(Date.now()-36e5).then(()=>{this._clearExpiredHourAgo()})},3e5),this._clearExpiredTimeoutId.unref()}_getConnection(){switch(this.clientType){case"pool":return new Promise((a,b)=>{this.client.getConnection((c,d)=>{if(c)return b(c);a(d)})});case"sequelize":return this.client.connectionManager.getConnection();case"knex":return this.client.client.acquireConnection();default:return Promise.resolve(this.client)}}_releaseConnection(a){switch(this.clientType){case"pool":return a.release();case"sequelize":return this.client.connectionManager.releaseConnection(a);case"knex":return this.client.client.releaseConnection(a);default:return!0}}_createDbAndTable(){return new Promise((a,b)=>{this._getConnection().then(c=>{c.query(`CREATE DATABASE IF NOT EXISTS \`${this.dbName}\`;`,d=>{if(d)return this._releaseConnection(c),b(d);c.query(this._getCreateTableStmt(),d=>{if(d)return this._releaseConnection(c),b(d);this._releaseConnection(c),a()})})}).catch(a=>{b(a)})})}_getCreateTableStmt(){return`CREATE TABLE IF NOT EXISTS \`${this.dbName}\`.\`${this.tableName}\` (\`key\` VARCHAR(255) CHARACTER SET utf8 NOT NULL,\`points\` INT(9) NOT NULL default 0,\`expire\` BIGINT UNSIGNED,PRIMARY KEY (\`key\`)) ENGINE = INNODB;`}get clientType(){return this._clientType}set clientType(a){if(void 0===a)if("Connection"===this.client.constructor.name)a="connection";else if("Pool"===this.client.constructor.name)a="pool";else if("Sequelize"===this.client.constructor.name)a="sequelize";else throw Error("storeType is not defined");this._clientType=a.toLowerCase()}get dbName(){return this._dbName}set dbName(a){this._dbName=void 0===a?"rtlmtrflx":a}get tableName(){return this._tableName}set tableName(a){this._tableName=void 0===a?this.keyPrefix:a}get tableCreated(){return this._tableCreated}set tableCreated(a){this._tableCreated=void 0!==a&&!!a}get clearExpiredByTimeout(){return this._clearExpiredByTimeout}set clearExpiredByTimeout(a){this._clearExpiredByTimeout=void 0===a||!!a}_getRateLimiterRes(a,b,c){let d=new e,[f]=c;return d.isFirstInDuration=b===f.points,d.consumedPoints=d.isFirstInDuration?b:f.points,d.remainingPoints=Math.max(this.points-d.consumedPoints,0),d.msBeforeNext=f.expire?Math.max(f.expire-Date.now(),0):-1,d}_upsertTransaction(a,b,c,d,e){return new Promise((f,g)=>{a.query("BEGIN",h=>{let i,j;if(h)return a.rollback(),g(h);let k=Date.now(),l=d>0?k+d:null;e?(i=`INSERT INTO ??.?? VALUES (?, ?, ?)
          ON DUPLICATE KEY UPDATE 
            points = ?, 
            expire = ?;`,j=[this.dbName,this.tableName,b,c,l,c,l]):(i=`INSERT INTO ??.?? VALUES (?, ?, ?)
          ON DUPLICATE KEY UPDATE 
            points = IF(expire <= ?, ?, points + (?)), 
            expire = IF(expire <= ?, ?, expire);`,j=[this.dbName,this.tableName,b,c,l,k,c,c,k,l]),a.query(i,j,c=>{if(c)return a.rollback(),g(c);a.query("SELECT points, expire FROM ??.?? WHERE `key` = ?;",[this.dbName,this.tableName,b],(b,c)=>{if(b)return a.rollback(),g(b);a.query("COMMIT",b=>{if(b)return a.rollback(),g(b);f(c)})})})})})}_upsert(a,b,c,d=!1){return this.tableCreated?new Promise((e,f)=>{this._getConnection().then(g=>{this._upsertTransaction(g,a,b,c,d).then(a=>{e(a),this._releaseConnection(g)}).catch(a=>{f(a),this._releaseConnection(g)})}).catch(a=>{f(a)})}):Promise.reject(Error("Table is not created yet"))}_get(a){return this.tableCreated?new Promise((b,c)=>{this._getConnection().then(d=>{d.query("SELECT points, expire FROM ??.?? WHERE `key` = ? AND (`expire` > ? OR `expire` IS NULL)",[this.dbName,this.tableName,a,Date.now()],(a,e)=>{a?c(a):0===e.length?b(null):b(e),this._releaseConnection(d)})}).catch(a=>{c(a)})}):Promise.reject(Error("Table is not created yet"))}_delete(a){return this.tableCreated?new Promise((b,c)=>{this._getConnection().then(d=>{d.query("DELETE FROM ??.?? WHERE `key` = ?",[this.dbName,this.tableName,a],(a,e)=>{a?c(a):b(e.affectedRows>0),this._releaseConnection(d)})}).catch(a=>{c(a)})}):Promise.reject(Error("Table is not created yet"))}}a.exports=f},11239:a=>{a.exports=class{constructor(a,b,c=null){this.value=a,this.expiresAt=b,this.timeoutId=c}get value(){return this._value}set value(a){this._value=parseInt(a)}get expiresAt(){return this._expiresAt}set expiresAt(a){!(a instanceof Date)&&Number.isInteger(a)&&(a=new Date(a)),this._expiresAt=a}get timeoutId(){return this._timeoutId}set timeoutId(a){this._timeoutId=a}}},14490:(a,b,c)=>{let d=c(79915),e=c(22568),f=c(46423);class g extends d{constructor(a={}){super(a),this._memoryStorage=new e}consume(a,b=1,c={}){return new Promise((d,e)=>{let f=this.getKey(a),g=this._getKeySecDuration(c),h=this._memoryStorage.incrby(f,b,g);if(h.remainingPoints=Math.max(this.points-h.consumedPoints,0),h.consumedPoints>this.points)this.blockDuration>0&&h.consumedPoints<=this.points+b&&(h=this._memoryStorage.set(f,h.consumedPoints,this.blockDuration)),e(h);else if(this.execEvenly&&h.msBeforeNext>0&&!h.isFirstInDuration){let a=Math.ceil(h.msBeforeNext/(h.remainingPoints+2));a<this.execEvenlyMinDelayMs&&(a=h.consumedPoints*this.execEvenlyMinDelayMs),setTimeout(d,a,h)}else d(h)})}penalty(a,b=1,c={}){let d=this.getKey(a);return new Promise(a=>{let e=this._getKeySecDuration(c),f=this._memoryStorage.incrby(d,b,e);f.remainingPoints=Math.max(this.points-f.consumedPoints,0),a(f)})}reward(a,b=1,c={}){let d=this.getKey(a);return new Promise(a=>{let e=this._getKeySecDuration(c),f=this._memoryStorage.incrby(d,-b,e);f.remainingPoints=Math.max(this.points-f.consumedPoints,0),a(f)})}block(a,b){let c=1e3*b,d=this.points+1;return this._memoryStorage.set(this.getKey(a),d,b),Promise.resolve(new f(0,0===c?-1:c,d))}set(a,b,c){let d=(c>=0?c:this.duration)*1e3;return this._memoryStorage.set(this.getKey(a),b,c),Promise.resolve(new f(0,0===d?-1:d,b))}get(a){let b=this._memoryStorage.get(this.getKey(a));return null!==b&&(b.remainingPoints=Math.max(this.points-b.consumedPoints,0)),Promise.resolve(b)}delete(a){return Promise.resolve(this._memoryStorage.delete(this.getKey(a)))}}a.exports=g},17284:(a,b,c)=>{a.exports=c(67732)},17962:(a,b,c)=>{let d=c(78950),e=c(46423);class f extends d{constructor(a,b=null){super(a),this.client=a.storeClient,this.clientType=a.storeType,this.tableName=a.tableName,this.schemaName=a.schemaName,this.clearExpiredByTimeout=a.clearExpiredByTimeout,this.tableCreated=a.tableCreated,this.tableCreated?(this.clearExpiredByTimeout&&this._clearExpiredHourAgo(),"function"==typeof b&&b()):this._createTable().then(()=>{this.tableCreated=!0,this.clearExpiredByTimeout&&this._clearExpiredHourAgo(),"function"==typeof b&&b()}).catch(a=>{if("function"==typeof b)b(a);else throw a})}_getTableIdentifier(){return this.schemaName?`"${this.schemaName}"."${this.tableName}"`:`"${this.tableName}"`}clearExpired(a){return new Promise(b=>{let c={name:"rlflx-clear-expired",text:`DELETE FROM ${this._getTableIdentifier()} WHERE expire < $1`,values:[a]};this._query(c).then(()=>{b()}).catch(()=>{b()})})}_clearExpiredHourAgo(){this._clearExpiredTimeoutId&&clearTimeout(this._clearExpiredTimeoutId),this._clearExpiredTimeoutId=setTimeout(()=>{this.clearExpired(Date.now()-36e5).then(()=>{this._clearExpiredHourAgo()})},3e5),this._clearExpiredTimeoutId.unref()}_getConnection(){switch(this.clientType){case"pool":default:return Promise.resolve(this.client);case"sequelize":return this.client.connectionManager.getConnection();case"knex":return this.client.client.acquireConnection();case"typeorm":return Promise.resolve(this.client.driver.master)}}_releaseConnection(a){switch(this.clientType){case"pool":case"typeorm":default:return!0;case"sequelize":return this.client.connectionManager.releaseConnection(a);case"knex":return this.client.client.releaseConnection(a)}}_createTable(){return new Promise((a,b)=>{this._query({text:this._getCreateTableStmt()}).then(()=>{a()}).catch(c=>{"23505"===c.code?a():b(c)})})}_getCreateTableStmt(){return`CREATE TABLE IF NOT EXISTS ${this._getTableIdentifier()} (
      key varchar(255) PRIMARY KEY,
      points integer NOT NULL DEFAULT 0,
      expire bigint
    );`}get clientType(){return this._clientType}set clientType(a){let b=this.client.constructor.name;if(void 0===a)if("Client"===b)a="client";else if("Pool"===b||"BoundPool"===b)a="pool";else if("Sequelize"===b)a="sequelize";else throw Error("storeType is not defined");this._clientType=a.toLowerCase()}get tableName(){return this._tableName}set tableName(a){this._tableName=void 0===a?this.keyPrefix:a}get schemaName(){return this._schemaName}set schemaName(a){this._schemaName=a}get tableCreated(){return this._tableCreated}set tableCreated(a){this._tableCreated=void 0!==a&&!!a}get clearExpiredByTimeout(){return this._clearExpiredByTimeout}set clearExpiredByTimeout(a){this._clearExpiredByTimeout=void 0===a||!!a}_getRateLimiterRes(a,b,c){let d=new e,f=c.rows[0];return d.isFirstInDuration=b===f.points,d.consumedPoints=d.isFirstInDuration?b:f.points,d.remainingPoints=Math.max(this.points-d.consumedPoints,0),d.msBeforeNext=f.expire?Math.max(f.expire-Date.now(),0):-1,d}_query(a){let b=this.tableName.toLowerCase(),c={name:`${b}:${a.name}`,text:a.text,values:a.values};return new Promise((a,b)=>{this._getConnection().then(d=>{d.query(c).then(b=>{a(b),this._releaseConnection(d)}).catch(a=>{b(a),this._releaseConnection(d)})}).catch(a=>{b(a)})})}_upsert(a,b,c,d=!1){if(!this.tableCreated)return Promise.reject(Error("Table is not created yet"));let e=c>0?Date.now()+c:null,f=d?" $3 ":` CASE
             WHEN ${this._getTableIdentifier()}.expire <= $4 THEN $3
             ELSE ${this._getTableIdentifier()}.expire
            END `;return this._query({name:d?"rlflx-upsert-force":"rlflx-upsert",text:`
            INSERT INTO ${this._getTableIdentifier()} VALUES ($1, $2, $3)
              ON CONFLICT(key) DO UPDATE SET
                points = CASE
                          WHEN (${this._getTableIdentifier()}.expire <= $4 OR 1=${+!!d}) THEN $2
                          ELSE ${this._getTableIdentifier()}.points + ($2)
                         END,
                expire = ${f}
            RETURNING points, expire;`,values:[a,b,e,Date.now()]})}_get(a){return this.tableCreated?new Promise((b,c)=>{this._query({name:"rlflx-get",text:`
            SELECT points, expire FROM ${this._getTableIdentifier()} WHERE key = $1 AND (expire > $2 OR expire IS NULL);`,values:[a,Date.now()]}).then(a=>{0===a.rowCount&&(a=null),b(a)}).catch(a=>{c(a)})}):Promise.reject(Error("Table is not created yet"))}_delete(a){return this.tableCreated?this._query({name:"rlflx-delete",text:`DELETE FROM ${this._getTableIdentifier()} WHERE key = $1`,values:[a]}).then(a=>a.rowCount>0):Promise.reject(Error("Table is not created yet"))}}a.exports=f},22568:(a,b,c)=>{let d=c(11239),e=c(46423);a.exports=class{constructor(){this._storage={}}incrby(a,b,c){if(this._storage[a]){let c=this._storage[a].expiresAt?this._storage[a].expiresAt.getTime()-new Date().getTime():-1;if(!this._storage[a].expiresAt||c>0)return this._storage[a].value=this._storage[a].value+b,new e(0,c,this._storage[a].value,!1)}return this.set(a,b,c)}set(a,b,c){let f=1e3*c;return this._storage[a]&&this._storage[a].timeoutId&&clearTimeout(this._storage[a].timeoutId),this._storage[a]=new d(b,f>0?new Date(Date.now()+f):null),f>0&&(this._storage[a].timeoutId=setTimeout(()=>{delete this._storage[a]},f),this._storage[a].timeoutId.unref&&this._storage[a].timeoutId.unref()),new e(0,0===f?-1:f,this._storage[a].value,!0)}get(a){return this._storage[a]?new e(0,this._storage[a].expiresAt?this._storage[a].expiresAt.getTime()-new Date().getTime():-1,this._storage[a].value,!1):null}delete(a){return!!this._storage[a]&&(this._storage[a].timeoutId&&clearTimeout(this._storage[a].timeoutId),delete this._storage[a],!0)}}},23011:(a,b,c)=>{let d=c(78950),e=c(46423),f=`
server.call('set', KEYS[1], 0, 'EX', ARGV[2], 'NX')
local consumed = server.call('incrby', KEYS[1], ARGV[1])
local ttl = server.call('pttl', KEYS[1])
return {consumed, ttl}
`;class g extends d{constructor(a){super(a),this.client=a.storeClient,this._rejectIfValkeyNotReady=!!a.rejectIfValkeyNotReady,this._incrTtlLuaScript=a.customIncrTtlLuaScript||f,this.client.defineCommand("rlflxIncr",{numberOfKeys:1,lua:this._incrTtlLuaScript})}_isValkeyReady(){return!this._rejectIfValkeyNotReady||"ready"===this.client.status}_getRateLimiterRes(a,b,c){let d,f;Array.isArray(c[0])?[[,d],[,f]]=c:[d,f]=c;let g=new e;return g.consumedPoints=+d,g.isFirstInDuration=g.consumedPoints===b,g.remainingPoints=Math.max(this.points-g.consumedPoints,0),g.msBeforeNext=f,g}_upsert(a,b,c,d=!1){if(!this._isValkeyReady())throw Error("Valkey connection is not ready");let e=Math.floor(c/1e3);if(d){let c=this.client.multi();return e>0?c.set(a,b,"EX",e):c.set(a,b),c.pttl(a).exec()}return e>0?this.client.rlflxIncr([a,String(b),String(e),String(this.points),String(this.duration)]):this.client.multi().incrby(a,b).pttl(a).exec()}_get(a){if(!this._isValkeyReady())throw Error("Valkey connection is not ready");return this.client.multi().get(a).pttl(a).exec().then(a=>{let[[,b]]=a;return null===b?null:a})}_delete(a){return this.client.del(a).then(a=>a>0)}}a.exports=g},29880:(a,b,c)=>{let d=c(78950),e=c(46423);class f extends d{constructor(a){super(a),this.client=a.storeClient}_getRateLimiterRes(a,b,c){let d=new e;return d.consumedPoints=parseInt(c.consumedPoints),d.isFirstInDuration=c.consumedPoints===b,d.remainingPoints=Math.max(this.points-d.consumedPoints,0),d.msBeforeNext=c.msBeforeNext,d}_upsert(a,b,c,d=!1,e={}){return new Promise((f,g)=>{let h=Date.now(),i=Math.floor(c/1e3);d?this.client.set(a,b,i,c=>{c?g(c):this.client.set(`${a}_expire`,i>0?h+1e3*i:-1,i,()=>{f({consumedPoints:b,msBeforeNext:i>0?1e3*i:-1})})}):this.client.incr(a,b,(j,k)=>{j||!1===k?this.client.add(a,b,i,(j,k)=>{if(j||!k)if(void 0===e.attemptNumber||e.attemptNumber<3){let h=Object.assign({},e);h.attemptNumber=h.attemptNumber?h.attemptNumber+1:1,this._upsert(a,b,c,d,h).then(a=>f(a)).catch(a=>g(a))}else g(Error("Can not add key"));else this.client.add(`${a}_expire`,i>0?h+1e3*i:-1,i,()=>{f({consumedPoints:b,msBeforeNext:i>0?1e3*i:-1})})}):this.client.get(`${a}_expire`,(a,b)=>{if(a)g(a);else{let a=!1===b?0:b;f({consumedPoints:k,msBeforeNext:a>=0?Math.max(a-h,0):-1})}})})})}_get(a){return new Promise((b,c)=>{let d=Date.now();this.client.get(a,(e,f)=>{f?this.client.get(`${a}_expire`,(a,e)=>{if(a)c(a);else{let a=!1===e?0:e;b({consumedPoints:f,msBeforeNext:a>=0?Math.max(a-d,0):-1})}}):b(null)})})}_delete(a){return new Promise((b,c)=>{this.client.del(a,(d,e)=>{d?c(d):!1===e?b(e):this.client.del(`${a}_expire`,a=>{a?c(a):b(e)})})})}}a.exports=f},39535:(a,b,c)=>{let d=c(40902),e=c(73929),f=c(4195),g=c(17962),{RateLimiterClusterMaster:h,RateLimiterClusterMasterPM2:i,RateLimiterCluster:j}=c(95039),k=c(14490),l=c(29880),m=c(71325),n=c(74038),o=c(62986),p=c(97090),q=c(46423),r=c(73455),s=c(84153),t=c(74307),u=c(80321),v=c(23011),w=c(65534),x=c(70957);a.exports={RateLimiterRedis:d,RateLimiterMongo:e,RateLimiterMySQL:f,RateLimiterPostgres:g,RateLimiterMemory:k,RateLimiterMemcache:l,RateLimiterClusterMaster:h,RateLimiterClusterMasterPM2:i,RateLimiterCluster:j,RLWrapperBlackAndWhite:m,RateLimiterUnion:n,RateLimiterQueue:o,BurstyRateLimiter:p,RateLimiterRes:q,RateLimiterDynamo:r,RateLimiterPrisma:s,RateLimiterValkey:v,RateLimiterValkeyGlide:w,RateLimiterSQLite:x,RateLimiterEtcd:c(67287),RateLimiterDrizzle:t,RateLimiterDrizzleNonAtomic:u,RateLimiterEtcdNonAtomic:c(60445)}},40902:(a,b,c)=>{let d=c(78950),e=c(46423);class f extends d{constructor(a){super(a),this.client=a.storeClient,this._rejectIfRedisNotReady=!!a.rejectIfRedisNotReady,this._incrTtlLuaScript=a.customIncrTtlLuaScript||"redis.call('set', KEYS[1], 0, 'EX', ARGV[2], 'NX') local consumed = redis.call('incrby', KEYS[1], ARGV[1]) local ttl = redis.call('pttl', KEYS[1]) if ttl == -1 then   redis.call('expire', KEYS[1], ARGV[2])   ttl = 1000 * ARGV[2] end return {consumed, ttl} ",this.useRedisPackage=a.useRedisPackage||"Commander"===this.client.constructor.name||!1,this.useRedis3AndLowerPackage=a.useRedis3AndLowerPackage,"function"==typeof this.client.defineCommand&&this.client.defineCommand("rlflxIncr",{numberOfKeys:1,lua:this._incrTtlLuaScript})}_isRedisReady(){return!this._rejectIfRedisNotReady||(!this.client.status||"ready"===this.client.status)&&("function"!=typeof this.client.isReady||!!this.client.isReady())}_getRateLimiterRes(a,b,c){let[d,f]=c;Array.isArray(d)&&([,d]=d,[,f]=f);let g=new e;return g.consumedPoints=parseInt(d),g.isFirstInDuration=g.consumedPoints===b,g.remainingPoints=Math.max(this.points-g.consumedPoints,0),g.msBeforeNext=f,g}async _upsert(a,b,c,d=!1){if("string"==typeof b){if(!RegExp("^[1-9][0-9]*$").test(b))throw Error("Consuming string different than integer values is not supported by this package")}else if(!Number.isInteger(b))throw Error("Consuming decimal number of points is not supported by this package");if(!this._isRedisReady())throw Error("Redis connection is not ready");let e=Math.floor(c/1e3),f=this.client.multi();return d?(e>0?this.useRedisPackage||this.useRedis3AndLowerPackage?f.set(a,b,{EX:e}):f.set(a,b,"EX",e):f.set(a,b),this.useRedisPackage||this.useRedis3AndLowerPackage)?f.pTTL(a).exec(!0):f.pttl(a).exec(!0):e>0?this.useRedisPackage||this.useRedis3AndLowerPackage?this.useRedis3AndLowerPackage?new Promise((c,d)=>{let f=function(a,b){return a?d(a):c(b)};"function"==typeof this.client.rlflxIncr?this.client.rlflxIncr(a,b,e,this.points,this.duration,f):this.client.eval(this._incrTtlLuaScript,1,a,b,e,this.points,this.duration,f)}):this.client.eval(this._incrTtlLuaScript,{keys:[a],arguments:[String(b),String(e),String(this.points),String(this.duration)]}):this.client.rlflxIncr([a].concat([String(b),String(e),String(this.points),String(this.duration)])):this.useRedisPackage||this.useRedis3AndLowerPackage?f.incrBy(a,b).pTTL(a).exec(!0):f.incrby(a,b).pttl(a).exec(!0)}async _get(a){if(!this._isRedisReady())throw Error("Redis connection is not ready");return this.useRedisPackage||this.useRedis3AndLowerPackage?this.client.multi().get(a).pTTL(a).exec(!0).then(a=>{let[b]=a;return null===b?null:a}):this.client.multi().get(a).pttl(a).exec().then(a=>{let[[,b]]=a;return null===b?null:a})}_delete(a){return this.client.del(a).then(a=>a>0)}}a.exports=f},41914:a=>{a.exports=class extends Error{constructor(a){super(),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="RateLimiterEtcdTransactionFailedError",this.message=a}}},46423:a=>{a.exports=class{constructor(a,b,c,d){this.remainingPoints=void 0===a?0:a,this.msBeforeNext=void 0===b?0:b,this.consumedPoints=void 0===c?0:c,this.isFirstInDuration=void 0!==d&&d}get msBeforeNext(){return this._msBeforeNext}set msBeforeNext(a){return this._msBeforeNext=a,this}get remainingPoints(){return this._remainingPoints}set remainingPoints(a){return this._remainingPoints=a,this}get consumedPoints(){return this._consumedPoints}set consumedPoints(a){return this._consumedPoints=a,this}get isFirstInDuration(){return this._isFirstInDuration}set isFirstInDuration(a){this._isFirstInDuration=!!a}_getDecoratedProperties(){return{remainingPoints:this.remainingPoints,msBeforeNext:this.msBeforeNext,consumedPoints:this.consumedPoints,isFirstInDuration:this.isFirstInDuration}}[Symbol.for("nodejs.util.inspect.custom")](){return this._getDecoratedProperties()}toString(){return JSON.stringify(this._getDecoratedProperties())}toJSON(){return this._getDecoratedProperties()}}},52092:a=>{a.exports=class extends Error{constructor(a){super(),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="RateLimiterSetupError",this.message=a}}},60445:(a,b,c)=>{let d=c(78950),e=c(46423),f=c(52092);class g extends d{constructor(a){if(super(a),!a.storeClient)throw new f('You need to set the option "storeClient" to an instance of class "Etcd3".');this.client=a.storeClient}_getRateLimiterRes(a,b,c){let d=new e;return d.isFirstInDuration=b===c.points,d.consumedPoints=d.isFirstInDuration?b:c.points,d.remainingPoints=Math.max(this.points-d.consumedPoints,0),d.msBeforeNext=c.expire?Math.max(c.expire-Date.now(),0):-1,d}async _upsert(a,b,c,d=!1){let e=c>0?Date.now()+c:null,f={points:b,expire:e};if(d)await this.client.put(a).value(JSON.stringify(f));else{let c=await this._get(a);f={points:(null!==c?c.points:0)+b,expire:e},await this.client.put(a).value(JSON.stringify(f))}return f}async _get(a){return this.client.get(a).string().then(a=>null!==a?JSON.parse(a):null)}async _delete(a){return this.client.delete().key(a).then(a=>"1"===a.deleted)}}a.exports=g},62986:(a,b,c)=>{let d=c(67806),e="limiter";a.exports=class{constructor(a,b={maxQueueSize:0xffffffff}){this._queueLimiters={KEY_DEFAULT:new f(a,b)},this._limiterFlexible=a,this._maxQueueSize=b.maxQueueSize}getTokensRemaining(a=e){return this._queueLimiters[a]?this._queueLimiters[a].getTokensRemaining():Promise.resolve(this._limiterFlexible.points)}removeTokens(a,b=e){return this._queueLimiters[b]||(this._queueLimiters[b]=new f(this._limiterFlexible,{key:b,maxQueueSize:this._maxQueueSize})),this._queueLimiters[b].removeTokens(a)}};class f{constructor(a,b={maxQueueSize:0xffffffff,key:e}){this._key=b.key,this._waitTimeout=null,this._queue=[],this._limiterFlexible=a,this._maxQueueSize=b.maxQueueSize}getTokensRemaining(){return this._limiterFlexible.get(this._key).then(a=>null!==a?a.remainingPoints:this._limiterFlexible.points)}removeTokens(a){let b=this;return new Promise((c,e)=>{if(a>b._limiterFlexible.points)return void e(new d(`Requested tokens ${a} exceeds maximum ${b._limiterFlexible.points} tokens per interval`));b._queue.length>0?b._queueRequest.call(b,c,e,a):b._limiterFlexible.consume(b._key,a).then(a=>{c(a.remainingPoints)}).catch(d=>{d instanceof Error?e(d):(b._queueRequest.call(b,c,e,a),null===b._waitTimeout&&(b._waitTimeout=setTimeout(b._processFIFO.bind(b),d.msBeforeNext)))})})}_queueRequest(a,b,c){this._queue.length<this._maxQueueSize?this._queue.push({resolve:a,reject:b,tokens:c}):b(new d(`Number of requests reached it's maximum ${this._maxQueueSize}`))}_processFIFO(){let a=this;if(null!==a._waitTimeout&&(clearTimeout(a._waitTimeout),a._waitTimeout=null),0===a._queue.length)return;let b=a._queue.shift();a._limiterFlexible.consume(a._key,b.tokens).then(c=>{b.resolve(c.remainingPoints),a._processFIFO.call(a)}).catch(c=>{c instanceof Error?(b.reject(c),a._processFIFO.call(a)):(a._queue.unshift(b),null===a._waitTimeout&&(a._waitTimeout=setTimeout(a._processFIFO.bind(a),c.msBeforeNext)))})}}},65534:(a,b,c)=>{let d=c(78950),e=c(46423),f=`local key = KEYS[1]
local pointsToConsume = tonumber(ARGV[1])
if tonumber(ARGV[2]) > 0 then
  server.call('set', key, "0", 'EX', ARGV[2], 'NX')
  local consumed = server.call('incrby', key, pointsToConsume)
  local pttl = server.call('pttl', key)
  return {consumed, pttl}
end
local consumed = server.call('incrby', key, pointsToConsume)
local pttl = server.call('pttl', key)
return {consumed, pttl}`,g=`local key = KEYS[1]
local value = server.call('get', key)
if value == nil then
  return value
end
local pttl = server.call('pttl', key)
return {tonumber(value), pttl}`;class h extends d{constructor(a){super(a),this.client=a.storeClient,this._scriptLoaded=!1,this._getScriptLoaded=!1,this._rejectIfValkeyNotReady=!!a.rejectIfValkeyNotReady,this._luaScript=a.customFunction||f,this._libraryName=a.customFunctionLibName||"ratelimiterflexible"}async _loadScripts(){if(this._scriptLoaded&&this._getScriptLoaded)return!0;if(!this.client)throw Error("Valkey client is not set");let a=[];if(this._scriptLoaded)a.push(Promise.resolve(this._libraryName));else{let b=Buffer.from(`#!lua name=${this._libraryName}
        local function consume(KEYS, ARGV)
          ${this._luaScript.trim()}
        end
        server.register_function('consume', consume)`);a.push(this.client.functionLoad(b,{replace:!0}))}if(this._getScriptLoaded)a.push(Promise.resolve("ratelimiter_get"));else{let b=Buffer.from(`#!lua name=ratelimiter_get
        local function getValue(KEYS, ARGV)
          ${g.trim()}
        end
        server.register_function('getValue', getValue)`);a.push(this.client.functionLoad(b,{replace:!0}))}let b=await Promise.all(a);if(this._scriptLoaded=b[0]===this._libraryName,this._getScriptLoaded="ratelimiter_get"===b[1],!this._scriptLoaded||!this._getScriptLoaded)throw Error("Valkey connection is not ready, scripts not loaded");return!0}async _upsert(a,b,c,d=!1,e={}){await this._loadScripts();let f=Math.floor(c/1e3);return d?f>0?(await this.client.set(a,String(b),{expiry:{type:"EX",count:f}}),[b,1e3*f]):(await this.client.set(a,String(b)),[b,-1]):await this.client.fcall("consume",[a],[String(b),String(f)])}async _get(a,b={}){await this._loadScripts();let c=await this.client.fcall("getValue",[a],[]);return c.length>0?c:null}async _delete(a,b={}){return await this.client.del([a])>0}_getRateLimiterRes(a,b,c){if(null===c)return null;let d=new e,[f,g]=c,h=Number(f);return d.isFirstInDuration=h===b,d.consumedPoints=h,d.remainingPoints=Math.max(this.points-d.consumedPoints,0),d.msBeforeNext=g,d}async close(){if(this._scriptLoaded&&(await this.client.functionDelete(this._libraryName),this._scriptLoaded=!1),this._getScriptLoaded&&(await this.client.functionDelete("ratelimiter_get"),this._getScriptLoaded=!1),this.insuranceLimiter)try{await this.insuranceLimiter.close()}catch(a){}this.client=null,this._scriptLoaded=!1,this._getScriptLoaded=!1,this._rejectIfValkeyNotReady=!1,this._luaScript=null,this._libraryName=null,this.insuranceLimiter=null}}a.exports=h},67287:(a,b,c)=>{let d=c(41914),e=c(60445);class f extends e{async _upsert(a,b,c,e=!1){let f,g=c>0?Date.now()+c:null,h={points:b,expire:g};if(e)await this.client.put(a).value(JSON.stringify(h));else if(!await this.client.if(a,"Version","===","0").then(this.client.put(a).value(JSON.stringify(h))).commit().then(a=>!!a.succeeded)){let c=!1;for(let d=0;d<5&&(h={points:(f=await this._get(a)).points+b,expire:g},!(c=await this.client.if(a,"Value","===",JSON.stringify(f)).then(this.client.put(a).value(JSON.stringify(h))).commit().then(a=>!!a.succeeded)));d++);if(!c)throw new d("Could not set new value in a transaction.")}return h}}a.exports=f},67732:a=>{a.exports=class{constructor(){this._keys={},this._addedKeysAmount=0}collectExpired(){let a=Date.now();Object.keys(this._keys).forEach(b=>{this._keys[b]<=a&&delete this._keys[b]}),this._addedKeysAmount=Object.keys(this._keys).length}add(a,b){this.addMs(a,1e3*b)}addMs(a,b){this._keys[a]=Date.now()+b,this._addedKeysAmount++,this._addedKeysAmount>999&&this.collectExpired()}msBeforeExpire(a){let b=this._keys[a];if(b&&b>=Date.now()){this.collectExpired();let a=Date.now();return b>=a?b-a:0}return 0}delete(a){a?delete this._keys[a]:Object.keys(this._keys).forEach(a=>{delete this._keys[a]})}}},67806:a=>{a.exports=class extends Error{constructor(a,b){super(),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="CustomError",this.message=a,b&&(this.extra=b)}}},70957:(a,b,c)=>{let d=c(78950),e=c(46423);class f extends d{constructor(a,b=null){super(a),this._internalStoreType=null,this.client=a.storeClient,this.storeType=a.storeType||"sqlite3",this.tableName=a.tableName,this.tableCreated=a.tableCreated||!1,this.clearExpiredByTimeout=a.clearExpiredByTimeout,this._validateStoreTypes(b),this._validateStoreClient(b),this._setInternalStoreType(b),this._validateTableName(b),this.tableCreated?(this.clearExpiredByTimeout&&this._clearExpiredHourAgo(),"function"==typeof b&&b()):this._createDbAndTable().then(()=>{this.tableCreated=!0,this.clearExpiredByTimeout&&this._clearExpiredHourAgo(),"function"==typeof b&&b()}).catch(a=>{if("function"==typeof b)b(a);else throw a})}_validateStoreTypes(a){let b=["sqlite3","better-sqlite3","knex"];if(!b.includes(this.storeType)){let c=Error(`storeType must be one of: ${b.join(", ")}`);if("function"==typeof a)return a(c);throw c}}_validateStoreClient(a){if("sqlite3"===this.storeType){if("function"!=typeof this.client.run){let b=Error("storeClient must be an instance of sqlite3.Database when storeType is 'sqlite3' or no storeType was provided");if("function"==typeof a)return a(b);throw b}}else if("better-sqlite3"===this.storeType){if("function"!=typeof this.client.prepare||void 0!==this.client.run){let b=Error("storeClient must be an instance of better-sqlite3.Database when storeType is 'better-sqlite3'");if("function"==typeof a)return a(b);throw b}}else if("knex"===this.storeType&&"function"!=typeof this.client.raw){let b=Error("storeClient must be an instance of Knex when storeType is 'knex'");if("function"==typeof a)return a(b);throw b}}_setInternalStoreType(a){if("knex"===this.storeType){let b=this.client.client.config.client;if("sqlite3"===b)this._internalStoreType="sqlite3";else if("better-sqlite3"===b)this._internalStoreType="better-sqlite3";else{let b=Error("Knex must be configured with 'sqlite3' or 'better-sqlite3' for RateLimiterSQLite");if("function"==typeof a)return a(b);throw b}}else this._internalStoreType=this.storeType}_validateTableName(a){if(!/^[A-Za-z0-9_]*$/.test(this.tableName)){let b=Error("Table name must contain only letters and numbers");if("function"==typeof a)return a(b);throw b}}async _getConnection(){return"knex"===this.storeType?this.client.client.acquireConnection():this.client}_releaseConnection(a){"knex"===this.storeType&&this.client.client.releaseConnection(a)}async _createDbAndTable(){let a=await this._getConnection();try{switch(this._internalStoreType){case"sqlite3":await new Promise((b,c)=>{a.run(this._getCreateTableSQL(),a=>a?c(a):b())});break;case"better-sqlite3":a.prepare(this._getCreateTableSQL()).run();break;default:throw Error("Unsupported internalStoreType")}}finally{this._releaseConnection(a)}}_getCreateTableSQL(){return`CREATE TABLE IF NOT EXISTS ${this.tableName} (
      key TEXT PRIMARY KEY,
      points INTEGER NOT NULL DEFAULT 0,
      expire INTEGER
    )`}_clearExpiredHourAgo(){this._clearExpiredTimeoutId&&clearTimeout(this._clearExpiredTimeoutId),this._clearExpiredTimeoutId=setTimeout(()=>{this.clearExpired(Date.now()-36e5).then(()=>this._clearExpiredHourAgo())},3e5),this._clearExpiredTimeoutId.unref()}async clearExpired(a){let b=`DELETE FROM ${this.tableName} WHERE expire < ?`,c=await this._getConnection();try{switch(this._internalStoreType){case"sqlite3":await new Promise((d,e)=>{c.run(b,[a],a=>a?e(a):d())});break;case"better-sqlite3":c.prepare(b).run(a);break;default:throw Error("Unsupported internalStoreType")}}finally{this._releaseConnection(c)}}_getRateLimiterRes(a,b,c){let d=new e;return d.isFirstInDuration=b===c.points,d.consumedPoints=d.isFirstInDuration?b:c.points,d.remainingPoints=Math.max(this.points-d.consumedPoints,0),d.msBeforeNext=c.expire?Math.max(c.expire-Date.now(),0):-1,d}async _upsertTransactionSQLite3(a,b,c){return await new Promise((d,e)=>{a.serialize(()=>{a.run("SAVEPOINT rate_limiter_trx;",f=>{if(f)return e(f);a.get(b,c,(b,c)=>{if(b)return void a.run("ROLLBACK TO SAVEPOINT rate_limiter_trx;",()=>e(b));a.run("RELEASE SAVEPOINT rate_limiter_trx;",()=>d(c))})})})})}async _upsertTransactionBetterSQLite3(a,b,c){return a.transaction(()=>a.prepare(b).get(...c))()}async _upsertTransaction(a,b,c,d){let e=Date.now(),f=c>0?e+c:null,g=d?`INSERT OR REPLACE INTO ${this.tableName} (key, points, expire) VALUES (?, ?, ?) RETURNING points, expire`:`INSERT INTO ${this.tableName} (key, points, expire)
         VALUES (?, ?, ?)
         ON CONFLICT(key) DO UPDATE SET
           points = CASE WHEN expire IS NULL OR expire > ? THEN points + excluded.points ELSE excluded.points END,
           expire = CASE WHEN expire IS NULL OR expire > ? THEN expire ELSE excluded.expire END
         RETURNING points, expire`,h=d?[a,b,f]:[a,b,f,e,e],i=await this._getConnection();try{switch(this._internalStoreType){case"sqlite3":return this._upsertTransactionSQLite3(i,g,h);case"better-sqlite3":return this._upsertTransactionBetterSQLite3(i,g,h);default:throw Error("Unsupported internalStoreType")}}finally{this._releaseConnection(i)}}_upsert(a,b,c,d=!1){return this.tableCreated?this._upsertTransaction(a,b,c,d):Promise.reject(Error("Table is not created yet"))}async _get(a){let b=`SELECT points, expire FROM ${this.tableName} WHERE key = ? AND (expire > ? OR expire IS NULL)`,c=Date.now(),d=await this._getConnection();try{switch(this._internalStoreType){case"sqlite3":return await new Promise((e,f)=>{d.get(b,[a,c],(a,b)=>a?f(a):e(b||null))});case"better-sqlite3":return d.prepare(b).get(a,c)||null;default:throw Error("Unsupported internalStoreType")}}finally{this._releaseConnection(d)}}async _delete(a){if(!this.tableCreated)return Promise.reject(Error("Table is not created yet"));let b=`DELETE FROM ${this.tableName} WHERE key = ?`,c=await this._getConnection();try{switch(this._internalStoreType){case"sqlite3":return await new Promise((d,e)=>{c.run(b,[a],function(a){a?e(a):d(this.changes>0)})});case"better-sqlite3":return c.prepare(b).run(a).changes>0;default:throw Error("Unsupported internalStoreType")}}finally{this._releaseConnection(c)}}}a.exports=f},71325:(a,b,c)=>{let d=c(46423);a.exports=class{constructor(a={}){this.limiter=a.limiter,this.blackList=a.blackList,this.whiteList=a.whiteList,this.isBlackListed=a.isBlackListed,this.isWhiteListed=a.isWhiteListed,this.runActionAnyway=a.runActionAnyway}get limiter(){return this._limiter}set limiter(a){if(void 0===a)throw Error("limiter is not set");this._limiter=a}get runActionAnyway(){return this._runActionAnyway}set runActionAnyway(a){this._runActionAnyway=void 0!==a&&a}get blackList(){return this._blackList}set blackList(a){this._blackList=Array.isArray(a)?a:[]}get isBlackListed(){return this._isBlackListed}set isBlackListed(a){if(void 0===a&&(a=()=>!1),"function"!=typeof a)throw Error("isBlackListed must be function");this._isBlackListed=a}get whiteList(){return this._whiteList}set whiteList(a){this._whiteList=Array.isArray(a)?a:[]}get isWhiteListed(){return this._isWhiteListed}set isWhiteListed(a){if(void 0===a&&(a=()=>!1),"function"!=typeof a)throw Error("isWhiteListed must be function");this._isWhiteListed=a}isBlackListedSomewhere(a){return this.blackList.indexOf(a)>=0||this.isBlackListed(a)}isWhiteListedSomewhere(a){return this.whiteList.indexOf(a)>=0||this.isWhiteListed(a)}getBlackRes(){return new d(0,Number.MAX_SAFE_INTEGER,0,!1)}getWhiteRes(){return new d(Number.MAX_SAFE_INTEGER,0,0,!1)}rejectBlack(){return Promise.reject(this.getBlackRes())}resolveBlack(){return Promise.resolve(this.getBlackRes())}resolveWhite(){return Promise.resolve(this.getWhiteRes())}consume(a,b=1){let c;return(this.isWhiteListedSomewhere(a)?c=this.resolveWhite():this.isBlackListedSomewhere(a)&&(c=this.rejectBlack()),void 0===c)?this.limiter.consume(a,b):(this.runActionAnyway&&this.limiter.consume(a,b).catch(()=>{}),c)}block(a,b){let c;return(this.isWhiteListedSomewhere(a)?c=this.resolveWhite():this.isBlackListedSomewhere(a)&&(c=this.resolveBlack()),void 0===c)?this.limiter.block(a,b):(this.runActionAnyway&&this.limiter.block(a,b).catch(()=>{}),c)}penalty(a,b){let c;return(this.isWhiteListedSomewhere(a)?c=this.resolveWhite():this.isBlackListedSomewhere(a)&&(c=this.resolveBlack()),void 0===c)?this.limiter.penalty(a,b):(this.runActionAnyway&&this.limiter.penalty(a,b).catch(()=>{}),c)}reward(a,b){let c;return(this.isWhiteListedSomewhere(a)?c=this.resolveWhite():this.isBlackListedSomewhere(a)&&(c=this.resolveBlack()),void 0===c)?this.limiter.reward(a,b):(this.runActionAnyway&&this.limiter.reward(a,b).catch(()=>{}),c)}get(a){let b;return(this.isWhiteListedSomewhere(a)?b=this.resolveWhite():this.isBlackListedSomewhere(a)&&(b=this.resolveBlack()),void 0===b||this.runActionAnyway)?this.limiter.get(a):b}delete(a){return this.limiter.delete(a)}}},73455:(a,b,c)=>{let d=c(46423),e=c(78950);class f{constructor(a,b,c){this.key=a,this.points=b,this.expire=c}}class g extends e{constructor(a,b=null){super(a),this.client=a.storeClient,this.tableName=a.tableName,this.tableCreated=a.tableCreated,this.ttlManuallySet=a.ttlSet,this.tableCreated?this._setTTL().finally(()=>{"function"==typeof b&&b()}):this._createTable(a.dynamoTableOpts).then(a=>{this.tableCreated=!0,this._setTTL().finally(()=>{"function"==typeof b&&b()})}).catch(a=>{if("function"==typeof b)b(a);else throw a})}get tableName(){return this._tableName}set tableName(a){this._tableName=void 0===a?"node-rate-limiter-flexible":a}get tableCreated(){return this._tableCreated}set tableCreated(a){this._tableCreated=void 0!==a&&!!a}async _createTable(a){let b={TableName:this.tableName,AttributeDefinitions:[{AttributeName:"key",AttributeType:"S"}],KeySchema:[{AttributeName:"key",KeyType:"HASH"}],ProvisionedThroughput:{ReadCapacityUnits:a&&a.readCapacityUnits?a.readCapacityUnits:25,WriteCapacityUnits:a&&a.writeCapacityUnits?a.writeCapacityUnits:25}};try{return await this.client.createTable(b)}catch(a){if(a.__type&&a.__type.includes("ResourceInUseException"))return null;throw a}}async _get(a){if(!this.tableCreated)throw Error("Table is not created yet");let b={TableName:this.tableName,Key:{key:{S:a}}},c=await this.client.getItem(b);return c.Item?new f(c.Item.key.S,Number(c.Item.points.N),Number(c.Item.expire.N)):null}async _delete(a){if(!this.tableCreated)throw Error("Table is not created yet");let b={TableName:this.tableName,Key:{key:{S:a}},ConditionExpression:"attribute_exists(#k)",ExpressionAttributeNames:{"#k":"key"}};try{let a=await this._client.deleteItem(b);return 200===a.$metadata.httpStatusCode}catch(a){if(a.__type&&a.__type.includes("ConditionalCheckFailedException"))return!1;throw a}}async _upsert(a,b,c,d=!1,e={}){if(!this.tableCreated)throw Error("Table is not created yet");let f=Date.now(),g=f/1e3,h=c>0?(f+c)/1e3:-1;if(d)return await this._baseUpsert({TableName:this.tableName,Key:{key:{S:a}},UpdateExpression:"SET points = :points, expire = :expire",ExpressionAttributeValues:{":points":{N:b.toString()},":expire":{N:h.toString()}},ReturnValues:"ALL_NEW"});try{return await this._baseUpsert({TableName:this.tableName,Key:{key:{S:a}},UpdateExpression:"SET points = :new_points, expire = :new_expire",ExpressionAttributeValues:{":new_points":{N:b.toString()},":new_expire":{N:h.toString()},":where_expire":{N:g.toString()}},ConditionExpression:"expire <= :where_expire OR attribute_not_exists(points)",ReturnValues:"ALL_NEW"})}catch(c){return await this._baseUpsert({TableName:this.tableName,Key:{key:{S:a}},UpdateExpression:"SET points = points + :new_points",ExpressionAttributeValues:{":new_points":{N:b.toString()},":where_expire":{N:g.toString()}},ConditionExpression:"expire > :where_expire",ReturnValues:"ALL_NEW"})}}async _baseUpsert(a){if(!this.tableCreated)throw Error("Table is not created yet");try{let b=await this.client.updateItem(a);return new f(b.Attributes.key.S,Number(b.Attributes.points.N),Number(b.Attributes.expire.N))}catch(a){throw a}}async _setTTL(){if(!this.tableCreated)throw Error("Table is not created yet");try{if(await this._isTTLSet())return;let a={TableName:this.tableName,TimeToLiveSpecification:{AttributeName:"expire",Enabled:!0}};return await this.client.updateTimeToLive(a)}catch(a){throw a}}async _isTTLSet(){if(!this.tableCreated)throw Error("Table is not created yet");if(this.ttlManuallySet)return!0;try{let a=await this.client.describeTimeToLive({TableName:this.tableName});return 200==a.$metadata.httpStatusCode&&"ENABLED"===a.TimeToLiveDescription.TimeToLiveStatus&&"expire"===a.TimeToLiveDescription.AttributeName}catch(a){throw a}}_getRateLimiterRes(a,b,c){let e=new d;return e.isFirstInDuration=b===c.points,e.consumedPoints=e.isFirstInDuration?b:c.points,e.remainingPoints=Math.max(this.points-e.consumedPoints,0),e.msBeforeNext=-1!=c.expire?Math.max(1e3*c.expire-Date.now(),0):-1,e}}a.exports=g},73929:(a,b,c)=>{let d=c(78950),e=c(46423);function f(a){try{let b=a.client?a.client:a,c=[0,0,0];if(void 0===b.topology){let{version:a}=b.options.metadata.driver;c=a.split("|",1)[0].split(".").map(a=>parseInt(a))}else{let{version:a}=b.topology.s.options.metadata.driver;c=a.split(".").map(a=>parseInt(a))}return{major:c[0],feature:c[1],patch:c[2]}}catch(a){return{major:0,feature:0,patch:0}}}class g extends d{constructor(a){super(a),this.dbName=a.dbName,this.tableName=a.tableName,this.indexKeyPrefix=a.indexKeyPrefix,this.disableIndexesCreation=a.disableIndexesCreation,a.mongo?this.client=a.mongo:this.client=a.storeClient,"function"==typeof this.client.then?this.client.then(a=>{this.client=a,this._initCollection(),this._driverVersion=f(this.client)}):(this._initCollection(),this._driverVersion=f(this.client))}get dbName(){return this._dbName}set dbName(a){this._dbName=void 0===a?g.getDbName():a}static getDbName(){return"node-rate-limiter-flexible"}get tableName(){return this._tableName}set tableName(a){this._tableName=void 0===a?this.keyPrefix:a}get client(){return this._client}set client(a){if(void 0===a)throw Error("mongo is not set");this._client=a}get indexKeyPrefix(){return this._indexKeyPrefix}set indexKeyPrefix(a){this._indexKeyPrefix=a||{}}get disableIndexesCreation(){return this._disableIndexesCreation}set disableIndexesCreation(a){this._disableIndexesCreation=!!a}async createIndexes(){let a=("function"==typeof this.client.db?this.client.db(this.dbName):this.client).collection(this.tableName);await a.createIndex({expire:-1},{expireAfterSeconds:0}),await a.createIndex(Object.assign({},this.indexKeyPrefix,{key:1}),{unique:!0})}_initCollection(){let a=("function"==typeof this.client.db?this.client.db(this.dbName):this.client).collection(this.tableName);this.disableIndexesCreation||this.createIndexes().catch(a=>{console.error(`Cannot create indexes for mongo collection ${this.tableName}`,a)}),this._collection=a}_getRateLimiterRes(a,b,c){let d,f=new e;return f.isFirstInDuration=(d=void 0===c.value?c:c.value).points===b,f.consumedPoints=d.points,f.remainingPoints=Math.max(this.points-f.consumedPoints,0),f.msBeforeNext=null!==d.expire?Math.max(new Date(d.expire).getTime()-Date.now(),0):-1,f}_upsert(a,b,c,d=!1,e={}){let f,g;if(!this._collection)return Promise.reject(Error("Mongo connection is not established"));let h=e.attrs||{};d?(f=Object.assign(f={key:a},h),(g={$set:{key:a,points:b,expire:c>0?new Date(Date.now()+c):null}}).$set=Object.assign(g.$set,h)):(f=Object.assign(f={$or:[{expire:{$gt:new Date}},{expire:{$eq:null}}],key:a},h),(g={$setOnInsert:{key:a,expire:c>0?new Date(Date.now()+c):null},$inc:{points:b}}).$setOnInsert=Object.assign(g.$setOnInsert,h));let i={upsert:!0};return this._driverVersion.major>=4||3===this._driverVersion.major&&this._driverVersion.feature>=7||this._driverVersion.feature>=6&&this._driverVersion.patch>=7?i.returnDocument="after":i.returnOriginal=!1,new Promise((e,j)=>{this._collection.findOneAndUpdate(f,g,i).then(a=>{e(a)}).catch(f=>{if(f&&11e3===f.code){let f=Object.assign({$or:[{expire:{$lte:new Date}},{expire:{$eq:null}}],key:a},h),g={$set:Object.assign({key:a,points:b,expire:c>0?new Date(Date.now()+c):null},h)};this._collection.findOneAndUpdate(f,g,i).then(a=>{e(a)}).catch(f=>{f&&11e3===f.code?this._upsert(a,b,c,d).then(a=>e(a)).catch(a=>j(a)):j(f)})}else j(f)})})}_get(a,b={}){if(!this._collection)return Promise.reject(Error("Mongo connection is not established"));let c=b.attrs||{},d=Object.assign({key:a,$or:[{expire:{$gt:new Date}},{expire:{$eq:null}}]},c);return this._collection.findOne(d)}_delete(a,b={}){if(!this._collection)return Promise.reject(Error("Mongo connection is not established"));let c=Object.assign({key:a},b.attrs||{});return this._collection.deleteOne(c).then(a=>a.deletedCount>0)}}a.exports=g},74038:(a,b,c)=>{let d=c(79915);a.exports=class{constructor(...a){if(a.length<1)throw Error("RateLimiterUnion: at least one limiter have to be passed");a.forEach(a=>{if(!(a instanceof d))throw Error("RateLimiterUnion: all limiters have to be instance of RateLimiterAbstract")}),this._limiters=a}consume(a,b=1){return new Promise((c,d)=>{let e=[];this._limiters.forEach(c=>{e.push(c.consume(a,b).catch(a=>({rejected:!0,rej:a})))}),Promise.all(e).then(a=>{let b={},e=!1;a.forEach(a=>{!0===a.rejected&&(e=!0)});for(let c=0;c<a.length;c++)e&&!0===a[c].rejected?b[this._limiters[c].keyPrefix]=a[c].rej:e||(b[this._limiters[c].keyPrefix]=a[c]);e?d(b):c(b)})})}}},74307:(a,b,c)=>{let d=null;class e extends Error{constructor(a){super(a),this.name="RateLimiterDrizzleError"}}async function f(){if(d)return d;try{let a=await c(1183)("drizzle-orm"),{and:b,or:e,gt:f,lt:g,eq:h,isNull:i,sql:j}=a.default||a;return d={and:b,or:e,gt:f,lt:g,eq:h,isNull:i,sql:j}}catch(a){throw new e("drizzle-orm is not installed. Please install drizzle-orm to use RateLimiterDrizzle.")}}let g=c(78950),h=c(46423);class i extends g{constructor(a){if(super(a),!a?.schema)throw new e("Drizzle schema is required");if(!a?.storeClient)throw new e("Drizzle client is required");this.schema=a.schema,this.drizzleClient=a.storeClient,this.clearExpiredByTimeout=a.clearExpiredByTimeout??!0,this.clearExpiredByTimeout&&this._clearExpiredHourAgo()}_getRateLimiterRes(a,b,c){let d=new h;return d.isFirstInDuration=c.points===b,d.consumedPoints=c.points,d.remainingPoints=Math.max(this.points-d.consumedPoints,0),d.msBeforeNext=null!==c.expire?Math.max(new Date(c.expire).getTime()-Date.now(),0):-1,d}async _upsert(a,b,c,d=!1){if(!this.drizzleClient)return Promise.reject(new e("Drizzle client is not established"));let{eq:g,sql:h}=await f(),i=new Date,j=c>0?new Date(i.getTime()+c):null;return await this.drizzleClient.transaction(async c=>{let[e]=await c.select().from(this.schema).where(g(this.schema.key,a)).limit(1),f=d||!e?.expire||e?.expire<=i||null===j,[k]=await c.insert(this.schema).values({key:a,points:b,expire:j}).onConflictDoUpdate({target:this.schema.key,set:{points:f?b:h`${this.schema.points} + ${b}`,...f&&{expire:j}}}).returning();return k})}async _get(a){if(!this.drizzleClient)return Promise.reject(new e("Drizzle client is not established"));let{and:b,or:c,gt:d,eq:g,isNull:h}=await f(),[i]=await this.drizzleClient.select().from(this.schema).where(b(g(this.schema.key,a),c(d(this.schema.expire,new Date),h(this.schema.expire)))).limit(1);return i||null}async _delete(a){if(!this.drizzleClient)return Promise.reject(new e("Drizzle client is not established"));let{eq:b}=await f(),[c]=await this.drizzleClient.delete(this.schema).where(b(this.schema.key,a)).returning({key:this.schema.key});return!!c?.key}_clearExpiredHourAgo(){this._clearExpiredTimeoutId&&clearTimeout(this._clearExpiredTimeoutId),this._clearExpiredTimeoutId=setTimeout(async()=>{try{let{lt:a}=await f();await this.drizzleClient.delete(this.schema).where(a(this.schema.expire,new Date(Date.now()-36e5)))}catch(a){console.warn("Failed to clear expired records:",a)}this._clearExpiredHourAgo()},3e5),this._clearExpiredTimeoutId.unref()}}a.exports=i},78950:(a,b,c)=>{let d=c(79915),e=c(17284),f=c(46423);a.exports=class extends d{constructor(a={}){super(a),this.inMemoryBlockOnConsumed=a.inMemoryBlockOnConsumed,this.inMemoryBlockDuration=a.inMemoryBlockDuration,this.insuranceLimiter=a.insuranceLimiter,this._inMemoryBlockedKeys=new e}get client(){return this._client}set client(a){if(void 0===a)throw Error("storeClient is not set");this._client=a}_afterConsume(a,b,c,d,e,f={}){let g=this._getRateLimiterRes(c,d,e);if(this.inMemoryBlockOnConsumed>0&&!(this.inMemoryBlockDuration>0)&&g.consumedPoints>=this.inMemoryBlockOnConsumed)return(this._inMemoryBlockedKeys.addMs(c,g.msBeforeNext),g.consumedPoints>this.points)?b(g):a(g);if(g.consumedPoints>this.points){let a=Promise.resolve();this.blockDuration>0&&g.consumedPoints<=this.points+d&&(g.msBeforeNext=this.msBlockDuration,a=this._block(c,g.consumedPoints,this.msBlockDuration,f)),this.inMemoryBlockOnConsumed>0&&g.consumedPoints>=this.inMemoryBlockOnConsumed&&(this._inMemoryBlockedKeys.add(c,this.inMemoryBlockDuration),g.msBeforeNext=this.msInMemoryBlockDuration),a.then(()=>{b(g)}).catch(a=>{b(a)})}else if(this.execEvenly&&g.msBeforeNext>0&&!g.isFirstInDuration){let b=Math.ceil(g.msBeforeNext/(g.remainingPoints+2));b<this.execEvenlyMinDelayMs&&(b=g.consumedPoints*this.execEvenlyMinDelayMs),setTimeout(a,b,g)}else a(g)}_handleError(a,b,c,e,f,g=!1,h={}){this.insuranceLimiter instanceof d?this.insuranceLimiter[b](f,g,h).then(a=>{c(a)}).catch(a=>{e(a)}):e(a)}getInMemoryBlockMsBeforeExpire(a){return this.inMemoryBlockOnConsumed>0?this._inMemoryBlockedKeys.msBeforeExpire(a):0}get inMemoryBlockOnConsumed(){return this._inMemoryBlockOnConsumed}set inMemoryBlockOnConsumed(a){if(this._inMemoryBlockOnConsumed=a?parseInt(a):0,this.inMemoryBlockOnConsumed>0&&this.points>this.inMemoryBlockOnConsumed)throw Error('inMemoryBlockOnConsumed option must be greater or equal "points" option')}get inMemoryBlockDuration(){return this._inMemoryBlockDuration}set inMemoryBlockDuration(a){if(this._inMemoryBlockDuration=a?parseInt(a):0,this.inMemoryBlockDuration>0&&0===this.inMemoryBlockOnConsumed)throw Error("inMemoryBlockOnConsumed option must be set up")}get msInMemoryBlockDuration(){return 1e3*this._inMemoryBlockDuration}get insuranceLimiter(){return this._insuranceLimiter}set insuranceLimiter(a){if(void 0!==a&&!(a instanceof d))throw Error("insuranceLimiter must be instance of RateLimiterAbstract");this._insuranceLimiter=a,this._insuranceLimiter&&(this._insuranceLimiter.blockDuration=this.blockDuration,this._insuranceLimiter.execEvenly=this.execEvenly)}block(a,b,c={}){return this._block(this.getKey(a),this.points+1,1e3*b,c)}set(a,b,c,d={}){let e=(c>=0?c:this.duration)*1e3;return this._block(this.getKey(a),b,e,d)}consume(a,b=1,c={}){return new Promise((d,e)=>{let g=this.getKey(a),h=this.getInMemoryBlockMsBeforeExpire(g);if(h>0)return e(new f(0,h));this._upsert(g,b,1e3*this._getKeySecDuration(c),!1,c).then(a=>{this._afterConsume(d,e,g,b,a)}).catch(f=>{this._handleError(f,"consume",d,e,a,b,c)})})}penalty(a,b=1,c={}){let d=this.getKey(a);return new Promise((e,f)=>{this._upsert(d,b,1e3*this._getKeySecDuration(c),!1,c).then(a=>{e(this._getRateLimiterRes(d,b,a))}).catch(d=>{this._handleError(d,"penalty",e,f,a,b,c)})})}reward(a,b=1,c={}){let d=this.getKey(a);return new Promise((e,f)=>{this._upsert(d,-b,1e3*this._getKeySecDuration(c),!1,c).then(a=>{e(this._getRateLimiterRes(d,-b,a))}).catch(d=>{this._handleError(d,"reward",e,f,a,b,c)})})}get(a,b={}){let c=this.getKey(a);return new Promise((d,e)=>{this._get(c,b).then(a=>{null==a?d(null):d(this._getRateLimiterRes(c,0,a))}).catch(c=>{this._handleError(c,"get",d,e,a,b)})})}delete(a,b={}){let c=this.getKey(a);return new Promise((d,e)=>{this._delete(c,b).then(a=>{this._inMemoryBlockedKeys.delete(c),d(a)}).catch(c=>{this._handleError(c,"delete",d,e,a,b)})})}deleteInMemoryBlockedAll(){this._inMemoryBlockedKeys.delete()}_getRateLimiterRes(a,b,c){throw Error("You have to implement the method '_getRateLimiterRes'!")}_block(a,b,c,d={}){return new Promise((e,g)=>{this._upsert(a,b,c,!0,d).then(()=>{e(new f(0,c>0?c:-1,b))}).catch(b=>{this._handleError(b,"block",e,g,this.parseKey(a),c/1e3,d)})})}_get(a,b={}){throw Error("You have to implement the method '_get'!")}_delete(a,b={}){throw Error("You have to implement the method '_delete'!")}_upsert(a,b,c,d=!1,e={}){throw Error("You have to implement the method '_upsert'!")}}},79915:a=>{a.exports=class{constructor(a={}){this.points=a.points,this.duration=a.duration,this.blockDuration=a.blockDuration,this.execEvenly=a.execEvenly,this.execEvenlyMinDelayMs=a.execEvenlyMinDelayMs,this.keyPrefix=a.keyPrefix}get points(){return this._points}set points(a){this._points=a>=0?a:4}get duration(){return this._duration}set duration(a){this._duration=void 0===a?1:a}get msDuration(){return 1e3*this.duration}get blockDuration(){return this._blockDuration}set blockDuration(a){this._blockDuration=void 0===a?0:a}get msBlockDuration(){return 1e3*this.blockDuration}get execEvenly(){return this._execEvenly}set execEvenly(a){this._execEvenly=void 0!==a&&!!a}get execEvenlyMinDelayMs(){return this._execEvenlyMinDelayMs}set execEvenlyMinDelayMs(a){this._execEvenlyMinDelayMs=void 0===a?Math.ceil(this.msDuration/this.points):a}get keyPrefix(){return this._keyPrefix}set keyPrefix(a){if(void 0===a&&(a="rlflx"),"string"!=typeof a)throw Error("keyPrefix must be string");this._keyPrefix=a}_getKeySecDuration(a={}){return a&&a.customDuration>=0?a.customDuration:this.duration}getKey(a){return this.keyPrefix.length>0?`${this.keyPrefix}:${a}`:a}parseKey(a){return a.substring(this.keyPrefix.length)}consume(){throw Error("You have to implement the method 'consume'!")}penalty(){throw Error("You have to implement the method 'penalty'!")}reward(){throw Error("You have to implement the method 'reward'!")}get(){throw Error("You have to implement the method 'get'!")}set(){throw Error("You have to implement the method 'set'!")}block(){throw Error("You have to implement the method 'block'!")}delete(){throw Error("You have to implement the method 'delete'!")}}},80321:(a,b,c)=>{let d=null;class e extends Error{constructor(a){super(a),this.name="RateLimiterDrizzleError"}}async function f(){if(d)return d;try{let a=await c(1183)("drizzle-orm"),{and:b,or:e,gt:f,lt:g,eq:h,isNull:i,sql:j}=a.default||a;return d={and:b,or:e,gt:f,lt:g,eq:h,isNull:i,sql:j}}catch(a){throw new e("drizzle-orm is not installed. Please install drizzle-orm to use RateLimiterDrizzleNonAtomic.")}}let g=c(78950),h=c(46423);class i extends g{constructor(a){if(super(a),!a?.schema)throw new e("Drizzle schema is required");if(!a?.storeClient)throw new e("Drizzle client is required");this.schema=a.schema,this.drizzleClient=a.storeClient,this.clearExpiredByTimeout=a.clearExpiredByTimeout??!0,this.clearExpiredByTimeout&&this._clearExpiredHourAgo()}_getRateLimiterRes(a,b,c){let d=new h;return d.isFirstInDuration=c.points===b,d.consumedPoints=c.points,d.remainingPoints=Math.max(this.points-d.consumedPoints,0),d.msBeforeNext=null!==c.expire?Math.max(new Date(c.expire).getTime()-Date.now(),0):-1,d}async _upsert(a,b,c,d=!1){let g;if(!this.drizzleClient)return Promise.reject(new e("Drizzle client is not established"));let{eq:h}=await f(),i=new Date,j=c>0?new Date(i.getTime()+c):null,[k]=await this.drizzleClient.select().from(this.schema).where(h(this.schema.key,a)).limit(1),l=d||!k||!k.expire||k.expire<=i||null===j;g=k&&!l?k.points+b:b;let[m]=await this.drizzleClient.insert(this.schema).values({key:a,points:g,expire:j}).onConflictDoUpdate({target:this.schema.key,set:{points:g,...l&&{expire:j}}}).returning();return m}async _get(a){if(!this.drizzleClient)return Promise.reject(new e("Drizzle client is not established"));let{and:b,or:c,gt:d,eq:g,isNull:h}=await f(),[i]=await this.drizzleClient.select().from(this.schema).where(b(g(this.schema.key,a),c(d(this.schema.expire,new Date),h(this.schema.expire)))).limit(1);return i||null}async _delete(a){if(!this.drizzleClient)return Promise.reject(new e("Drizzle client is not established"));let{eq:b}=await f(),[c]=await this.drizzleClient.delete(this.schema).where(b(this.schema.key,a)).returning({key:this.schema.key});return!!(c&&c.key)}_clearExpiredHourAgo(){this._clearExpiredTimeoutId&&clearTimeout(this._clearExpiredTimeoutId),this._clearExpiredTimeoutId=setTimeout(async()=>{try{let{lt:a}=await f();await this.drizzleClient.delete(this.schema).where(a(this.schema.expire,new Date(Date.now()-36e5)))}catch(a){console.warn("Failed to clear expired records:",a)}this._clearExpiredHourAgo()},3e5),this._clearExpiredTimeoutId.unref()}}a.exports=i},84153:(a,b,c)=>{let d=c(78950),e=c(46423);class f extends d{constructor(a){if(super(a),this.modelName=a.tableName||"RateLimiterFlexible",this.prismaClient=a.storeClient,this.clearExpiredByTimeout=a.clearExpiredByTimeout||!0,!this.prismaClient)throw Error("Prisma client is not provided");this.clearExpiredByTimeout&&this._clearExpiredHourAgo()}_getRateLimiterRes(a,b,c){let d=new e;return d.isFirstInDuration=c.points===b,d.consumedPoints=c.points,d.remainingPoints=Math.max(this.points-d.consumedPoints,0),d.msBeforeNext=null!==c.expire?Math.max(new Date(c.expire).getTime()-Date.now(),0):-1,d}_upsert(a,b,c,d=!1){if(!this.prismaClient)return Promise.reject(Error("Prisma client is not established"));let e=new Date,f=c>0?new Date(e.getTime()+c):null;return this.prismaClient.$transaction(async c=>{let g=await c[this.modelName].findFirst({where:{key:a}});if(!g)return c[this.modelName].create({data:{key:a,points:b,expire:f}});{let h=d||!g.expire||g.expire<=e||null===f;return c[this.modelName].update({where:{key:a},data:{points:h?b:g.points+b,...h&&{expire:f}}})}})}_get(a){return this.prismaClient?this.prismaClient[this.modelName].findFirst({where:{AND:[{key:a},{OR:[{expire:{gt:new Date}},{expire:null}]}]}}):Promise.reject(Error("Prisma client is not established"))}_delete(a){return this.prismaClient?this.prismaClient[this.modelName].deleteMany({where:{key:a}}).then(a=>a.count>0):Promise.reject(Error("Prisma client is not established"))}_clearExpiredHourAgo(){this._clearExpiredTimeoutId&&clearTimeout(this._clearExpiredTimeoutId),this._clearExpiredTimeoutId=setTimeout(async()=>{await this.prismaClient[this.modelName].deleteMany({where:{expire:{lt:new Date(Date.now()-36e5)}}}),this._clearExpiredHourAgo()},3e5),this._clearExpiredTimeoutId.unref()}}a.exports=f},95039:(a,b,c)=>{let d=c(27172),e=c(55511),f=c(79915),g=c(14490),h=c(46423),i="rate_limiter_flexible",j=null,k=function(a,b,c,d){let e;e=null===d||!0===d||!1===d?d:{remainingPoints:d.remainingPoints,msBeforeNext:d.msBeforeNext,consumedPoints:d.consumedPoints,isFirstInDuration:d.isFirstInDuration},a.send({channel:i,keyPrefix:b.keyPrefix,promiseId:b.promiseId,type:c,data:e})},l=function(a){setTimeout(()=>{this._initiated?process.send(a):void 0!==this._promises[a.promiseId]&&l.call(this,a)},30)},m=function(a,b,c,d,e){let f={channel:i,keyPrefix:this.keyPrefix,func:a,promiseId:b,data:{key:c,arg:d,opts:e}};this._initiated?process.send(f):l.call(this,f)},n=function(a,b){let c;if(!b||b.channel!==i||void 0===this._rateLimiters[b.keyPrefix])return!1;switch(b.func){case"consume":c=this._rateLimiters[b.keyPrefix].consume(b.data.key,b.data.arg,b.data.opts);break;case"penalty":c=this._rateLimiters[b.keyPrefix].penalty(b.data.key,b.data.arg,b.data.opts);break;case"reward":c=this._rateLimiters[b.keyPrefix].reward(b.data.key,b.data.arg,b.data.opts);break;case"block":c=this._rateLimiters[b.keyPrefix].block(b.data.key,b.data.arg,b.data.opts);break;case"get":c=this._rateLimiters[b.keyPrefix].get(b.data.key,b.data.opts);break;case"delete":c=this._rateLimiters[b.keyPrefix].delete(b.data.key,b.data.opts);break;default:return!1}c&&c.then(c=>{k(a,b,"resolve",c)}).catch(c=>{k(a,b,"reject",c)})},o=function(a){if(!a||a.channel!==i||a.keyPrefix!==this.keyPrefix)return!1;if(this._promises[a.promiseId]){let b;switch(clearTimeout(this._promises[a.promiseId].timeoutId),b=null===a.data||!0===a.data||!1===a.data?a.data:new h(a.data.remainingPoints,a.data.msBeforeNext,a.data.consumedPoints,a.data.isFirstInDuration),a.type){case"resolve":this._promises[a.promiseId].resolve(b);break;case"reject":this._promises[a.promiseId].reject(b);break;default:throw Error(`RateLimiterCluster: no such message type '${a.type}'`)}delete this._promises[a.promiseId]}},p=function(){return{points:this.points,duration:this.duration,blockDuration:this.blockDuration,execEvenly:this.execEvenly,execEvenlyMinDelayMs:this.execEvenlyMinDelayMs,keyPrefix:this.keyPrefix}},q=function(a,b){let c=process.hrtime(),d=c[0].toString()+c[1].toString();return void 0!==this._promises[d]&&(d+=e.randomBytes(12).toString("base64")),this._promises[d]={resolve:a,reject:b,timeoutId:setTimeout(()=>{delete this._promises[d],b(Error("RateLimiterCluster timeout: no answer from master in time"))},this.timeoutMs)},d};class r{constructor(){if(j)return j;this._rateLimiters={},d.setMaxListeners(0),d.on("message",(a,b)=>{b&&b.channel===i&&"init"===b.type?(void 0===this._rateLimiters[b.opts.keyPrefix]&&(this._rateLimiters[b.opts.keyPrefix]=new g(b.opts)),a.send({channel:i,type:"init",keyPrefix:b.opts.keyPrefix})):n.call(this,a,b)}),j=this}}class s{constructor(a){if(j)return j;this._rateLimiters={},a.launchBus((b,c)=>{c.on("process:msg",b=>{let c=b.raw;c&&c.channel===i&&"init"===c.type?(void 0===this._rateLimiters[c.opts.keyPrefix]&&(this._rateLimiters[c.opts.keyPrefix]=new g(c.opts)),a.sendDataToProcessId(b.process.pm_id,{data:{},topic:i,channel:i,type:"init",keyPrefix:c.opts.keyPrefix},(a,b)=>{a&&console.log(a,b)})):n.call(this,{send:c=>{c.topic=i,void 0===c.data&&(c.data={}),a.sendDataToProcessId(b.process.pm_id,c,(a,b)=>{a&&console.log(a,b)})}},c)})}),j=this}}class t extends f{get timeoutMs(){return this._timeoutMs}set timeoutMs(a){this._timeoutMs=void 0===a?5e3:Math.abs(parseInt(a))}constructor(a={}){super(a),process.setMaxListeners(0),this.timeoutMs=a.timeoutMs,this._initiated=!1,process.on("message",a=>{a&&a.channel===i&&"init"===a.type&&a.keyPrefix===this.keyPrefix?this._initiated=!0:o.call(this,a)}),process.send({channel:i,type:"init",opts:p.call(this)}),this._promises={}}consume(a,b=1,c={}){return new Promise((d,e)=>{let f=q.call(this,d,e);m.call(this,"consume",f,a,b,c)})}penalty(a,b=1,c={}){return new Promise((d,e)=>{let f=q.call(this,d,e);m.call(this,"penalty",f,a,b,c)})}reward(a,b=1,c={}){return new Promise((d,e)=>{let f=q.call(this,d,e);m.call(this,"reward",f,a,b,c)})}block(a,b,c={}){return new Promise((d,e)=>{let f=q.call(this,d,e);m.call(this,"block",f,a,b,c)})}get(a,b={}){return new Promise((c,d)=>{let e=q.call(this,c,d);m.call(this,"get",e,a,b)})}delete(a,b={}){return new Promise((c,d)=>{let e=q.call(this,c,d);m.call(this,"delete",e,a,b)})}}a.exports={RateLimiterClusterMaster:r,RateLimiterClusterMasterPM2:s,RateLimiterCluster:t}},97090:(a,b,c)=>{let d=c(46423);a.exports=class{constructor(a,b){this._rateLimiter=a,this._burstLimiter=b}_combineRes(a,b){return a?new d(a.remainingPoints,Math.min(a.msBeforeNext,b?b.msBeforeNext:0),a.consumedPoints,a.isFirstInDuration):null}consume(a,b=1,c={}){return this._rateLimiter.consume(a,b,c).catch(e=>e instanceof d?this._burstLimiter.consume(a,b,c).then(a=>Promise.resolve(this._combineRes(e,a))).catch(a=>a instanceof d?Promise.reject(this._combineRes(e,a)):Promise.reject(a)):Promise.reject(e))}get(a){return Promise.all([this._rateLimiter.get(a),this._burstLimiter.get(a)]).then(([a,b])=>this._combineRes(a,b))}get points(){return this._rateLimiter.points}}}};