"use strict";exports.id=9388,exports.ids=[3074,9388],exports.modules={33074:a=>{a.exports={LIMITER_TYPES:{MEMORY:"memory",CLUSTER:"cluster",MEMCACHE:"memcache",MONGO:"mongo",REDIS:"redis",MYSQL:"mysql",POSTGRES:"postgres",DYNAMO:"dynamo",PRISMA:"prisma",SQLITE:"sqlite",VALKEY:"valkey",VALKEY_GLIDE:"valkey-glide"},ERR_UNKNOWN_LIMITER_TYPE_MESSAGE:"Unknown limiter type. Use one of LIMITER_TYPES constants."}},39388:(a,b,c)=>{let{LIMITER_TYPES:d,ERR_UNKNOWN_LIMITER_TYPE_MESSAGE:e}=c(33074),f=c(55511),{RateLimiterMemory:g,RateLimiterCluster:h,RateLimiterMemcache:i,RateLimiterMongo:j,RateLimiterMySQL:k,RateLimiterPostgres:l,RateLimiterRedis:m,RateLimiterValkey:n,RateLimiterValkeyGlide:o}=c(39535),p=function(a,b){if(p.instanceCount++,this.name=`brute${p.instanceCount}`,this.options=Object.assign({},p.defaults,b),this.options.minWait<1&&(this.options.minWait=1),!Object.keys(p.LIMITER_TYPES).map(a=>p.LIMITER_TYPES[a]).includes(a))throw Error(e);for(this.limiterType=a,this.delays=[this.options.minWait];this.delays[this.delays.length-1]<this.options.maxWait;){let a=this.delays[this.delays.length-1]+(this.delays.length>1?this.delays[this.delays.length-2]:0);this.delays.push(a)}this.delays[this.delays.length-1]=this.options.maxWait,void 0===this.options.lifetime&&(this.options.lifetime=Math.ceil(this.options.maxWait/1e3*(this.delays.length+this.options.freeRetries))),this.prevent=this.getMiddleware({prefix:this.options.prefix})};p.prototype.getMiddleware=function(a){let b=Object.assign({},a),c=b.prefix||"",d={storeClient:this.options.storeClient,storeType:this.options.storeType,keyPrefix:`${c}free`,dbName:this.options.dbName,tableName:this.options.tableName,points:this.options.freeRetries>0?this.options.freeRetries-1:0,duration:this.options.lifetime},f={storeClient:this.options.storeClient,storeType:this.options.storeType,keyPrefix:`${c}block`,dbName:this.options.dbName,tableName:this.options.tableName,points:1,duration:Math.min(this.options.lifetime,Math.ceil(this.options.maxWait/1e3))},q={storeClient:this.options.storeClient,storeType:this.options.storeType,keyPrefix:`${c}counter`,dbName:this.options.dbName,tableName:this.options.tableName,points:1,duration:this.options.lifetime};switch(this.limiterType){case"memory":this.freeLimiter=new g(d),this.blockLimiter=new g(f),this.counterLimiter=new g(q);break;case"cluster":this.freeLimiter=new h(d),this.blockLimiter=new h(f),this.counterLimiter=new h(q);break;case"memcache":this.freeLimiter=new i(d),this.blockLimiter=new i(f),this.counterLimiter=new i(q);break;case"mongo":this.freeLimiter=new j(d),this.blockLimiter=new j(f),this.counterLimiter=new j(q);break;case"mysql":this.freeLimiter=new k(d),this.blockLimiter=new k(f),this.counterLimiter=new k(q);break;case"postgres":this.freeLimiter=new l(d),this.blockLimiter=new l(f),this.counterLimiter=new l(q);break;case"valkey-glide":this.freeLimiter=new o(d),this.blockLimiter=new o(f),this.counterLimiter=new o(q);break;case"valkey":this.freeLimiter=new n(d),this.blockLimiter=new n(f),this.counterLimiter=new n(q);break;case"redis":this.freeLimiter=new m(d),this.blockLimiter=new m(f),this.counterLimiter=new m(q);break;default:throw Error(e)}let r=b.key;"function"!=typeof r&&(r=function(a,c,d){d(b.key)});let s=()=>void 0===b.failCallback?this.options.failCallback:b.failCallback;return(a,c,d)=>{let e={req:a,res:c,next:d,message:"Cannot increment request count"};r(a,c,f=>{if(f=b.ignoreIP?p._getKey([this.name,f]):p._getKey([a.ip,this.name,f]),this.options.attachResetToRequest){let b=a=>{Promise.all([this.freeLimiter.delete(f),this.blockLimiter.delete(f),this.counterLimiter.delete(f)]).then(()=>{"function"==typeof a&&process.nextTick(()=>{a()})}).catch(b=>{"function"==typeof a&&process.nextTick(()=>{a(b)})})};if(a.brute&&a.brute.reset){let c=a.brute.reset,d=b;b=function(a){c(()=>{d(a)})}}a.brute={reset:b}}this.freeLimiter.consume(f).then(()=>{"function"==typeof d&&d()}).catch(()=>{Promise.all([this.blockLimiter.get(f),this.counterLimiter.get(f)]).then(b=>{let[g,h]=b;if(null===g){let b=function(a,b,c){let d=c,e=a-1;return e>=0&&e<b.length&&(d=b[e]),d}(h?h.consumedPoints+1:1,this.delays,this.options.maxWait);this.blockLimiter.penalty(f,1,{customDuration:Math.ceil(b/1e3)}).then(b=>{if(1===b.consumedPoints)this.counterLimiter.penalty(f).then(()=>{"function"==typeof d&&d()}).catch(a=>{this.options.handleStoreError(Object.assign({},e,{parent:a}))});else{let e=new Date(Date.now()+b.msBeforeNext),f=s();"function"==typeof f&&f(a,c,d,e)}}).catch(a=>{this.options.handleStoreError(Object.assign({},e,{parent:a}))})}else{let b=new Date(Date.now()+g.msBeforeNext),e=s();"function"==typeof e&&e(a,c,d,b)}}).catch(a=>{this.options.handleStoreError(Object.assign({},e,{parent:a}))})})})}},p.prototype.reset=function(a,b,c){let d=[];a&&d.push(a),d.push(this.name),d.push(b);let e=p._getKey(d);Promise.all([this.freeLimiter.delete(e),this.blockLimiter.delete(e),this.counterLimiter.delete(e)]).then(()=>{"function"==typeof c&&process.nextTick(()=>{c()})}).catch(c=>{this.options.handleStoreError({message:"Cannot reset request count",parent:c,key:b,ip:a})})},p._getKey=function(a){let b="";return a.forEach(a=>{a&&(b+=f.createHash("sha256").update(a).digest("base64"))}),f.createHash("sha256").update(b).digest("base64")};let q=function(a,b){let c=Math.ceil((b.getTime()-Date.now())/1e3);a.header("Retry-After",c)};p.FailTooManyRequests=function(a,b,c,d){q(b,d),b.status(429),b.send({error:{text:"Too many requests in this time frame.",nextValidRequestDate:d}})},p.FailForbidden=function(a,b,c,d){q(b,d),b.status(403),b.send({error:{text:"Too many requests in this time frame.",nextValidRequestDate:d}})},p.FailMark=function(a,b,c,d){b.status(429),q(b,d),b.nextValidRequestDate=d,c()},p.defaults={freeRetries:2,attachResetToRequest:!0,minWait:500,maxWait:9e5,failCallback:p.FailTooManyRequests,handleStoreError(a){throw{message:a.message,parent:a.parent}}},p.LIMITER_TYPES=d,p.instanceCount=0,a.exports=p}};