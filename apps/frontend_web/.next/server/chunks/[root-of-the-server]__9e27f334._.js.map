{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/_SECOND%20YEAR/SE/iayos/apps/frontend_web/lib/rateLimiter.ts"],"sourcesContent":["// lib/rateLimiter.ts\r\nimport { RateLimiterMemory } from \"rate-limiter-flexible\";\r\n\r\nexport const rateLimiter = new RateLimiterMemory({\r\n  points: 3, // 3 attempts\r\n  duration: 300, // per 300 seconds (5 minutes)\r\n});\r\n"],"names":[],"mappings":"AAAA,qBAAqB;;;;;AACrB;;AAEO,MAAM,cAAc,IAAI,2KAAiB,CAAC;IAC/C,QAAQ;IACR,UAAU;AACZ","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/_SECOND%20YEAR/SE/iayos/apps/frontend_web/app/api/auth/check-rate-limit/route.ts"],"sourcesContent":["import { rateLimiter } from \"@/lib/rateLimiter\";\r\nimport { NextRequest } from \"next/server\";\r\n\r\nexport async function GET(req: NextRequest) {\r\n  console.log(\"Rate limit check API called\");\r\n\r\n  try {\r\n    const ip =\r\n      req.headers.get(\"x-forwarded-for\") ||\r\n      req.headers.get(\"x-real-ip\") ||\r\n      \"anonymous\";\r\n\r\n    console.log(\"Client IP:\", ip);\r\n\r\n    // Get rate limiter status without consuming points\r\n    const rateLimiterStatus = await rateLimiter.get(ip);\r\n    console.log(\"Rate limiter status:\", rateLimiterStatus);\r\n\r\n    if (rateLimiterStatus) {\r\n      const remainingTime = Math.max(\r\n        0,\r\n        Math.round(rateLimiterStatus.msBeforeNext / 1000)\r\n      );\r\n\r\n      const isRateLimited = rateLimiterStatus.remainingPoints <= 0;\r\n\r\n      const response = {\r\n        isRateLimited,\r\n        remainingTime: isRateLimited ? remainingTime : 0,\r\n        remainingAttempts: Math.max(0, rateLimiterStatus.remainingPoints),\r\n        totalAttempts: 3,\r\n        resetTime: new Date(\r\n          Date.now() + rateLimiterStatus.msBeforeNext\r\n        ).toISOString(),\r\n      };\r\n\r\n      console.log(\"Returning response:\", response);\r\n\r\n      return new Response(JSON.stringify(response), {\r\n        status: 200,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n    }\r\n\r\n    // No rate limit record found\r\n    const defaultResponse = {\r\n      isRateLimited: false,\r\n      remainingTime: 0,\r\n      remainingAttempts: 3,\r\n      totalAttempts: 3,\r\n      resetTime: null,\r\n    };\r\n\r\n    console.log(\r\n      \"No rate limit record found, returning default:\",\r\n      defaultResponse\r\n    );\r\n\r\n    return new Response(JSON.stringify(defaultResponse), {\r\n      status: 200,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Rate limit check error:\", error);\r\n\r\n    const errorResponse = {\r\n      isRateLimited: false,\r\n      remainingTime: 0,\r\n      remainingAttempts: 3,\r\n      totalAttempts: 3,\r\n      resetTime: null,\r\n    };\r\n\r\n    return new Response(JSON.stringify(errorResponse), {\r\n      status: 200,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAGO,eAAe,IAAI,GAAgB;IACxC,QAAQ,GAAG,CAAC;IAEZ,IAAI;QACF,MAAM,KACJ,IAAI,OAAO,CAAC,GAAG,CAAC,sBAChB,IAAI,OAAO,CAAC,GAAG,CAAC,gBAChB;QAEF,QAAQ,GAAG,CAAC,cAAc;QAE1B,mDAAmD;QACnD,MAAM,oBAAoB,MAAM,2JAAW,CAAC,GAAG,CAAC;QAChD,QAAQ,GAAG,CAAC,wBAAwB;QAEpC,IAAI,mBAAmB;YACrB,MAAM,gBAAgB,KAAK,GAAG,CAC5B,GACA,KAAK,KAAK,CAAC,kBAAkB,YAAY,GAAG;YAG9C,MAAM,gBAAgB,kBAAkB,eAAe,IAAI;YAE3D,MAAM,WAAW;gBACf;gBACA,eAAe,gBAAgB,gBAAgB;gBAC/C,mBAAmB,KAAK,GAAG,CAAC,GAAG,kBAAkB,eAAe;gBAChE,eAAe;gBACf,WAAW,IAAI,KACb,KAAK,GAAG,KAAK,kBAAkB,YAAY,EAC3C,WAAW;YACf;YAEA,QAAQ,GAAG,CAAC,uBAAuB;YAEnC,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC,WAAW;gBAC5C,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;YACF;QACF;QAEA,6BAA6B;QAC7B,MAAM,kBAAkB;YACtB,eAAe;YACf,eAAe;YACf,mBAAmB;YACnB,eAAe;YACf,WAAW;QACb;QAEA,QAAQ,GAAG,CACT,kDACA;QAGF,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC,kBAAkB;YACnD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QAEzC,MAAM,gBAAgB;YACpB,eAAe;YACf,eAAe;YACf,mBAAmB;YACnB,eAAe;YACf,WAAW;QACb;QAEA,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC,gBAAgB;YACjD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;QACF;IACF;AACF","debugId":null}}]
}